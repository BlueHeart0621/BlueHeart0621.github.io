<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>お前はどこまで見えている</title>
  
  <subtitle>僕たちは そうやって どこまで行くのだろう、どこまで行けるのだろう</subtitle>
  <link href="https://blueheart0621.github.io/atom.xml" rel="self"/>
  
  <link href="https://blueheart0621.github.io/"/>
  <updated>2022-11-18T07:07:02.101Z</updated>
  <id>https://blueheart0621.github.io/</id>
  
  <author>
    <name>BlueHeart0621</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BibTeX条目类型</title>
    <link href="https://blueheart0621.github.io/2022/11/16/Technique/TeX/BibTeX/BibTeX%E6%9D%A1%E7%9B%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://blueheart0621.github.io/2022/11/16/Technique/TeX/BibTeX/BibTeX%E6%9D%A1%E7%9B%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2022-11-16T06:13:53.000Z</published>
    <updated>2022-11-18T07:07:02.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介">1. 简介</h2><p>使用 BibTeX 时，各大参考文献检索网站经常会给出不同的 BibTeX 条目类型，本文便就 BibTeX 的各种条目类型及其说明进行摘录。</p><h2 id="2-BibTeX-条目类型">2. BibTeX 条目类型</h2><h3 id="article">article</h3><p>An article from a journal, magazine, newspaper, or periodical.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tex">@article&#123;CitekeyArticle,<br>  author   = &quot;P. J. Cohen&quot;,<br>  title    = &quot;The independence of the continuum hypothesis&quot;,<br>  journal  = &quot;Proceedings of the National Academy of Sciences&quot;,<br>  year     = 1963,<br>  volume   = &quot;50&quot;,<br>  number   = &quot;6&quot;,<br>  pages    = &quot;1143--1148&quot;,<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="book">book</h3><p>A book where the publisher is clearly identifiable.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tex">@book&#123;CitekeyBook,<br>  author    = &quot;Leonard Susskind and George Hrabovsky&quot;,<br>  title     = &quot;Classical mechanics: the theoretical minimum&quot;,<br>  publisher = &quot;Penguin Random House&quot;,<br>  address   = &quot;New York, NY&quot;,<br>  year      = 2014<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="booklet">booklet</h3><p>A printed work that is bound, but does not have a clearly identifiable publisher or supporting institution.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tex">@booklet&#123;CitekeyBooklet,<br>  title        = &quot;Canoe tours in &#123;S&#125;weden&quot;,<br>  author       = &quot;Maria Swetla&quot;, <br>  howpublished = &quot;Distributed at the Stockholm Tourist Office&quot;,<br>  month        = jul,<br>  year         = 2015<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="conference">conference</h2><p>An article that has been included in conference proceedings. See <a href="#inproceedings">inproceedings</a> for details.</p><h2 id="inbook">inbook</h2><p>A section, such as a chapter, or a page range within a book.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tex">@inbook&#123;CitekeyInbook,<br>  author    = &quot;Lisa A. Urry and Michael L. Cain and Steven A. Wasserman and Peter V. Minorsky and Jane B. Reece&quot;,<br>  title     = &quot;Photosynthesis&quot;,<br>  booktitle = &quot;Campbell Biology&quot;,<br>  year      = &quot;2016&quot;,<br>  publisher = &quot;Pearson&quot;,<br>  address   = &quot;New York, NY&quot;,<br>  pages     = &quot;187--221&quot;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="incollection">incollection</h2><p>A titled section of a book. Such as a short story within the larger collection of short stories that make up the book.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs tex">@incollection&#123;CitekeyIncollection,<br>  author    = &quot;Shapiro, Howard M.&quot;,<br>  editor    = &quot;Hawley, Teresa S. and Hawley, Robert G.&quot;,<br>  title     = &quot;Flow Cytometry: The Glass Is Half Full&quot;,<br>  booktitle = &quot;Flow Cytometry Protocols&quot;,<br>  year      = 2018,<br>  publisher = &quot;Springer&quot;,<br>  address   = &quot;New York, NY&quot;,<br>  pages     = &quot;1--10&quot;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="inproceedings">inproceedings</h2><p>A paper that has been published in conference proceedings. The usage of conference and inproceedings is the same. The <a href="#conference">conference</a> entry was included for <a href="http://www-sop.inria.fr/members/Manuel.Serrano/scribe/">Scribe</a> compatibility.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs tex">@inproceedings&#123;CitekeyInproceedings,<br>  author    = &quot;Holleis, Paul and Wagner, Matthias and Koolwaaij, Johan&quot;,<br>  title     = &quot;Studying mobile context-aware social services in the wild&quot;,<br>  booktitle = &quot;Proc. of the 6th Nordic Conf. on Human-Computer Interaction&quot;,<br>  series    = &quot;NordiCHI&quot;,<br>  year      = 2010,<br>  pages     = &quot;207--216&quot;,<br>  publisher = &quot;ACM&quot;,<br>  address   = &quot;New York, NY&quot;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="manual">manual</h2><p>A technical manual for a machine software such as would come with a purchase to explain operation to the new owner.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tex">@manual&#123;CitekeyManual,<br>  title        = &quot;&#123;R&#125;: A Language and Environment for Statistical Computing&quot;,<br>  author       = &quot;&#123;R Core Team&#125;&quot;,<br>  organization = &quot;R Foundation for Statistical Computing&quot;,<br>  address      = &quot;Vienna, Austria&quot;,<br>  year         = 2018<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="mastersthesis">mastersthesis</h2><p>A thesis written for the Master’s level degree.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tex">@mastersthesis&#123;CitekeyMastersthesis,<br>  author  = &quot;Jian Tang&quot;,<br>  title   = &quot;Spin structure of the nucleon in the asymptotic limit&quot;,<br>  school  = &quot;Massachusetts Institute of Technology&quot;,<br>  year    = 1996,<br>  address = &quot;Cambridge, MA&quot;,<br>  month   = sep<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="misc">misc</h2><p>Used if none of the other entry types quite match the source. Frequently  used to cite web pages, but can be anything from lecture slides to  personal notes.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tex">@misc&#123;CitekeyMisc,<br>  title        = &quot;Pluto: The &#x27;Other&#x27; Red Planet&quot;,<br>  author       = &quot;&#123;NASA&#125;&quot;,<br>  howpublished = &quot;<span class="hljs-keyword">\url</span>&#123;<span class="hljs-link">https://www.nasa.gov/nh/pluto-the-other-red-planet</span>&#125;&quot;,<br>  year         = 2015,<br>  note         = &quot;Accessed: 2018-12-06&quot;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="phdthesis">phdthesis</h2><p>A thesis written for the PhD level degree.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tex">@phdthesis&#123;CitekeyPhdthesis,<br>  author  = &quot;Rempel, Robert Charles&quot;,<br>  title   = &quot;Relaxation Effects for Coupled Nuclear Spins&quot;,<br>  school  = &quot;Stanford University&quot;,<br>  address = &quot;Stanford, CA&quot;,<br>  year    = 1956,<br>  month   = jun<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="proceedings">proceedings</h2><p>A conference proceeding.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tex">@proceedings&#123;CitekeyProceedings,<br>  editor    = &quot;Susan Stepney and Sergey Verlan&quot;,<br>  title     = &quot;Proceedings of the 17th International Conference on Computation and Natural Computation, Fontainebleau, France&quot;,<br>  series    = &quot;Lecture Notes in Computer Science&quot;,<br>  volume    = &quot;10867&quot;,<br>  publisher = &quot;Springer&quot;,<br>  address   = &quot;Cham, Switzerland&quot;,<br>  year      = 2018<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="techreport">techreport</h2><p>An institutionally published report such as a report from a school, a  government organization, an organization, or a company. This entry type  is also frequently used for white papers and working papers.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tex">@techreport&#123;CitekeyTechreport,<br>  title       = &quot;&#123;W&#125;asatch &#123;S&#125;olar &#123;P&#125;roject Final Report&quot;,<br>  author      = &quot;Bennett, Vicki and Bowman, Kate and Wright, Sarah&quot;,<br>  institution = &quot;Salt Lake City Corporation&quot;,<br>  address     = &quot;Salt Lake City, UT&quot;,<br>  number      = &quot;DOE-SLC-6903-1&quot;,<br>  year        = 2018,<br>  month       = sep<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="unpublished">unpublished</h2><p>A document that has not been officially published such as a paper draft or manuscript in preparation.</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tex">@unpublished&#123;CitekeyUnpublished,<br>  author = &quot;Mohinder Suresh&quot;,<br>  title  = &quot;Evolution: a revised theory&quot;,<br>  year   = 2006<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="附录">附录</h2><ul><li><a href="https://www.bibtex.com/e/entry-types/">The 14 BibTeX entry types</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;
&lt;p&gt;使用 BibTeX 时，各大参考文献检索网站经常会给出不同的 BibTeX 条目类型，本文便就 BibTeX 的各种条目类型及其说明进行摘录。&lt;/p&gt;
&lt;h2 id=&quot;2-BibTeX-条目类型&quot;&gt;2. BibTeX 条目类</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="TeX" scheme="https://blueheart0621.github.io/categories/Technique/TeX/"/>
    
    <category term="BibTeX" scheme="https://blueheart0621.github.io/categories/Technique/TeX/BibTeX/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="TeX" scheme="https://blueheart0621.github.io/tags/TeX/"/>
    
    <category term="BibTeX" scheme="https://blueheart0621.github.io/tags/BibTeX/"/>
    
  </entry>
  
  <entry>
    <title>点云库PCL：概述</title>
    <link href="https://blueheart0621.github.io/2022/11/09/Technique/PointCloud/%E7%82%B9%E4%BA%91%E5%BA%93PCL%EF%BC%9A%E6%A6%82%E8%BF%B0/%E7%82%B9%E4%BA%91%E5%BA%93PCL%EF%BC%9A%E6%A6%82%E8%BF%B0/"/>
    <id>https://blueheart0621.github.io/2022/11/09/Technique/PointCloud/%E7%82%B9%E4%BA%91%E5%BA%93PCL%EF%BC%9A%E6%A6%82%E8%BF%B0/%E7%82%B9%E4%BA%91%E5%BA%93PCL%EF%BC%9A%E6%A6%82%E8%BF%B0/</id>
    <published>2022-11-08T16:27:18.000Z</published>
    <updated>2022-11-18T07:07:02.102Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>阅读笔记，摘录自《点云库 PCL 从入门到精通》— 郭浩。</p></blockquote><h2 id="1-PCL-介绍">1. PCL 介绍</h2><p>PCL（Point Cloud Library，点云库）是在吸收了前人点云相关研究基础上建立起来的大型跨平台开源 C++ 编程库，它实现了大量点云相关的通用算法和高效数据结构，涉及点云获取、滤波、分割、配准、检索、特征提取、识别、追踪、曲面重建、可视化等；支持多种操作系统平台，可在 Windows、Linux、Android、Mac OS X、部分嵌入式实时系统上运行。如果说 OpenCV 是 2D 信息获取与处理的结晶，那么 PCL 就在 3D 信息获取与处理上具有相同的地位。PCL 是 BSD 授权方式，可以免费进行商业和学术应用。</p><h2 id="2-点云介绍">2. 点云介绍</h2><p>点云是分布在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 维空间中的离散点集，主要以三维为主，它是对物体表面信息的离散采样。三维扫描技术的迅速发展使得点云数据的获取更加简单方便，而点云驱动的计算机图形学在逆向工程、数字城市、文物保护、智能机器人、无人驾驶和人机交互等领域日益彰显其广阔的应用前景。点云处理技术包括点云获取、滤波、分割、配准、检索、特征提取、识别、追踪、曲面重建、可视化等方法技术，也包括结合图论、模式识别、机器学习、数据挖掘和深度学习等人工智能算法之后的解决实践应用中的同步定位与地图构建（SLAM）、三维模型检索、三维场景语义分析、广义点云等综合技术内容。</p><h2 id="3-点云应用">3. 点云应用</h2><h3 id="3-1-测绘领域">3.1 测绘领域</h3><p>能够直接获取高精度三维地面点数据，是对传统测量技术在高程数据获取及自动化快速处理方面的重要技术补充。激光遥感测量系统在地形测绘、环境检测、三维城市建模、地球科学、行星科学等诸多领域具有广泛的发展前景，是目前最先进的能实时获取地形表面三维空间信息和影像的遥感系统。目前，在各种提取地面点的算法中，算法结果与实际结果之间差别较大，违背了实际情况，PCL中强大的模块可以助力此处的各种需求。</p><h3 id="3-2-无人驾驶领域">3.2 无人驾驶领域</h3><p>无人驾驶车辆（Unmanned Vehicle）是一种具有自主驾驶行为的车辆。它是在传统车辆基础上，加人环境感知、智能决策、路径规划、行为控制等人工智能模块，进而可以与周围环境交互并作出相应决策和动作的移动轮式机器人，用于解放驾驶员，辅助安全驾驶，得到了广泛的关注，并且拥有良好的前景。无人驾驶能够实现主要是依赖车载 LiDAR 点云系统，其可以快速提取地球表面物体三维坐标信息，实时定位于构建地图，有着其他方法无法比拟的优势：</p><ul><li>数据采集速度快，只需沿街一次便可收集所有信息；</li><li>抗干扰能力强，全天候 24 小时都可进行数据采集；</li><li>点云密度大，数据量丰富，精度可靠；</li><li>可以得到实时车辆的位姿信息。</li></ul><h3 id="3-3-机器人领域">3.3 机器人领域</h3><p>移动机器人对其工作环境的有效感知、辨识与认知，是其进行自主行为优化并可靠完成所承担任务的前提和基础。如何实现场景中物体的有效分类与识别是移动机器人场景认知的核心问题，目前基于视觉图像处理技术来进行场景的认知是该领域的重要方法。但移动机器人在线获取的视觉图像质量受光线变化影响较大，特别是在光线较暗的场景更难以应用，随着 RGBD 获取设备的大量推广，在机器人领域势必掀起一股深度信息结合2D信息的应用研究热潮，深度信息的引人能够使机器人更好地对环境进行认知、辨识，与图像信息在机器人领域的应用一样，需要强大智能软件算法支撑，PCL 就为此而生，最重要的是 PCL 本身就是为机器人而发起的开源项目，PCL 中不仅提供了对现有的 RGBD 信息的获取设备的支持，还提供了高效的分割、特征提取、识别、追踪等最新的算法，最重要的是它可以移植到ROS、Android、Ubuntu 等主流 Linux 平台上，PCL 无疑将会成为机器人应用领域的一把瑞士军刀。</p><h3 id="3-4-人机交互领域">3.4 人机交互领域</h3><p>虚拟现实技术（简称 VR），又称灵境技术，是以沉浸性、交互性和构想性为基本特征的计算机高级人机界面。它综合利用了计算机图形学、仿真技术、多媒体技术、人工智能技术、计算机网络技术、并行处理技术和多传感器技术，模拟人的视觉、听觉、触觉等感觉器官功能，使人能够沉浸在计算机生成的虚拟境界中，并能够通过语言、手势等自然的方式与之进行实时交互，创建了一种适人化的多维信息空间，具有广阔的应用前景。目前各种交互式体感应用的推出，让虚拟现实与人机交互发展非常迅速，以微软、华硕、三星等为例，目前诸多公司推出的 RGBD 解决方案，势必会让虚拟现实走出实验室，因为现有的 RGBD 设备已经开始大量推向市场，只是缺少其他应用的跟进，这正是在为虚拟现实和人机交互应用铸造生态链的底部，笔者认为这也正是 PCL 为何在此时才把自己与世人分享的重要原因所在，它将是基于 RGBD 设备的虛拟现实和人机交互应用生态链中最重要的一个环节。</p><h3 id="3-5-逆向工程与其他工业自动化领域">3.5 逆向工程与其他工业自动化领域</h3><p>大部分工业产品是根据二维或三维 CAD 模型制造而成，但有时因为数据丢失、设计多点云库 PCL 从入门到精通次更改、实物引进等原因，产品的几何模型无法获得，因而常常需要根据现有产品实物生成物体几何模型。逆向工程技术能够对产品实物进行测绘，重构产品表面三维几何模型，生成产品制造所需的数字化文档。在一些工业领域，如汽车制造业，许多零件的几何模型都通过逆向工程由油泥模型或实物零件获得，目前在 CAD/CAM 领域利用激光点云进行高精度测量与重建成为趋势，同时引来了新的问题，通过获取的海量点云数据，来提取重建模型的几何参数，或者形状模型，对模型进行智能检索，从点云数据获取模型的曲面模型等，诸如此类的问题解决方案在 PCL 中都有涉及。例如 <code>kdtree</code> 和 <code>octree</code> 对海量点云进行高效压缩存储与管理，其中滤波、配准、特征描述与提前基础处理，可以应用于模型的智能检索，以及后期的曲面重建和可视化都在 PCL 中有相应的模块。总之，三维点云数据的处理是逆向工程中比较重要的一环，PCL 中间所有的模块正是为此而生的。</p><h3 id="3-6-BIM-领域">3.6 BIM 领域</h3><p>BIM（Building Information modeling，建筑信息模型化），是用三维模型作为信息载体，以描述建筑物生命周期内的建设活动的一种理念。BIM工作的核心是建立一个可供建筑设计者、结构设计者、施工方、物业方乃至业主等参与者都能使用、修改的三维模型。这样的模型一般称为BIM模型，这种模型是现实地物的虚拟映射，大到整个项目的规三维激光扫描技术为BIM建立模型提供准确的几何信息，可以大面积、高效率、全面地采集地物的几何信息以及功能特性，快捷地建立起精确的地物模型。通过三维激光扫描得到的点云BIM模型能够非常真实地呈现地物的实际状态，作为一种基础数据类型，结合 BIM 工程主要有以下几方面的应用:</p><ul><li>文物建筑保护</li><li>工程质量检测与管理</li><li>建筑拆迁管理</li><li>建筑物改造或装修</li></ul><h2 id="4-PCL-结构">4. PCL 结构</h2><p>对于 3D 点云处理来说，PCL 完全是一个模块化的现化 C++ 模板库，PCL 架构图如下所示：</p><img src="/images/Technique/PointCloud/%E7%82%B9%E4%BA%91%E5%BA%93PCL%EF%BC%9A%E6%A6%82%E8%BF%B0/PCL%E6%9E%B6%E6%9E%84.png" class="" width="1217" title="PCL架构"><p>PCL 基于以下第三方库：Boost、Eigen、FLANN、VTK、CUDA、OpenNI、Qhull，实现点云相关获取、滤波、分割、配准、检索、特征提取、识别、追踪、曲面重建、可视化等。</p><ul><li>PCL 利用 OpenMP、GPU、CUDA 等先进高性能计算技术，通过并行化提高程序实时性；</li><li>PCL 中 K 近邻搜索操作的架构是基于 FLANN 所实现的，速度也是目前技术中最快的。</li><li>PCL 中所有模块和算法都是通过 Boost 共享指针来传送数据的，因而避免了多次复制系统中已存在的数据的需要。</li></ul><p>从算法的角度，PCL 是指纳入了多种操作点云数据的三维处理算法，其中包括：过滤、特征估计、表面重建、模型拟合和分割、定位搜索等。每一套算法都是通过基类进行划分的，试图把贯穿整个流水线处理技术的所有常见功能整合在一起，从而保持了整个算法实现过程中的紧凑和结构清晰，提高代码的重用性、简洁可读。在PCL中一个处理管道的基本接口程序如下。</p><ol><li>创建处理对象(例如过滤、特征估计、分割等)。</li><li>使用setInputCloud通过输入点云数据，处理模块。</li><li>设置算法相关参数。</li><li>调用计算（或过滤、分割等）得到输出。</li></ol><p>为了进一步简化和开发，PCL 被分成一系列较小的代码库， 使其模块化，以便能够单独编译使用，提高可配置性，特别适用于嵌入式处理中。PCL 中常用代码库介绍如下。</p><ul><li>libpcl filters: 如采样、去除离群点、特征提取、拟合估计等数据实现过滤器。</li><li>libpcl features: 实现多种三维特征，如曲面法线、曲率、边界点估计、矩不变量、主曲率，PFH 和 FPFH 特征，旋转图像、积分图像，NARF 描述子，RIFT, 相对标准偏差，数据强度的筛选等等。</li><li>libpcl I/O: 实现数据的输入和输出操作，例如点云数据文件(PCD)的读写。</li><li>libpcl segmentation: 实现聚类提取，如通过采样一致性方法对一系列参数模型(如平面、柱面、球面、直线等)进行模型拟合点云分割提取，提取多边形棱镜内部点云等。</li><li>libpcl surface: 实现表面重建技术，如网格重建、凸包重建、移动最小二乘法平滑等。</li><li>libpcl register: 实现点云配准方法，如 ICP 等。</li><li>libpcl keypoints: 实现不同的关键点的提取方法，这可以用来作为预处理步骤，决定在哪儿提取特征描述符。</li><li>libpcl range: 实现支持不同点云数据集生成的范围图像。</li></ul><p>为了保证 PCL 中操作的正确性，上述提到的库中的方法和类包含了单元测试。这套单元测试通常都是由专门的构建按需求编译和验证的。当某一部分测试失败时，这些特定部分的各自作者就会立即被告知。这彻底地保证了代码测试过程出现的任何变故，以及新功能或修改都不会破坏 PCL 中已经存在的代码。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;阅读笔记，摘录自《点云库 PCL 从入门到精通》— 郭浩。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-PCL-介绍&quot;&gt;1. PCL 介绍&lt;/h2&gt;
&lt;p&gt;PCL（Point Cloud Library，点云库）是在吸收了前人点云相关研</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="PointCloud" scheme="https://blueheart0621.github.io/categories/Technique/PointCloud/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="PointCloud" scheme="https://blueheart0621.github.io/tags/PointCloud/"/>
    
  </entry>
  
  <entry>
    <title>Tmux配置</title>
    <link href="https://blueheart0621.github.io/2022/11/07/Technique/Tools/Tmux/Tmux%E9%85%8D%E7%BD%AE/"/>
    <id>https://blueheart0621.github.io/2022/11/07/Technique/Tools/Tmux/Tmux%E9%85%8D%E7%BD%AE/</id>
    <published>2022-11-07T08:03:55.000Z</published>
    <updated>2022-11-18T07:07:02.034Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介">1. 简介</h2><p>Tmux 是一款优秀的终端复用工具，使用它最直观的好处就是，通过一个终端登录远程主机并运行 <code>tmux</code> 后，在其中可以开启多个控制台而无需再「浪费」多余的终端来连接这台远程主机。Tmux 提供了非常多的强劲功能：</p><ul><li>提供了强劲的、易于使用的命令行界面。</li><li>可横向和纵向分割窗口。</li><li>窗格可以自由移动和调整大小，或直接利用四个预设布局之一。</li><li>支持 UTF-8 编码及 256 色终端。</li><li>可在多个缓冲区进行复制和粘贴。</li><li>可通过交互式菜单来选择窗口、会话及客户端。</li><li>支持跨窗口搜索。</li><li>支持自动及手动锁定窗口。</li><li>可以自由配置绑定快捷键。</li></ul><p>在 Tmux 逻辑中，Server &gt; Session &gt; Window &gt; Pane 这个大小和层级顺序是极其重要的，直接关系到工作效率：</p><ul><li><strong>Server</strong>：整个 <code>tmux</code> 的后台服务器。有时候更改配置不生效，就要使用 <code>tmux kill-server</code> 来重启 <code>tmux</code>。</li><li><strong>Session</strong>：每次使用 <code>tmux</code> 命令启动，便会建立一个会话 Session，一个服务器可以保持多个会话连接，同时我们也可以在多个会话之间切换。一个 Session 可以开启多个 Window，一般只要保存一个 Session 就足够了。</li><li><strong>Window</strong>：一个 Session 可包含多个 Window，每个 Window 都以标签的形式显示在 Session 下面的状态栏里。可以针对每种任务分一个 Window。如下载一个 Window，编程一个 window。</li><li><strong>Panel</strong>：每个 Window 可以划分多个 Panel，实现分屏显示。</li></ul><h2 id="2-命令">2. 命令</h2><h3 id="2-1-外部命令">2.1 外部命令</h3><p>Tmux 的常用外部命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 新建 Session</span><br>tmux [new -s 会话名 -n 窗口名]<br><br><span class="hljs-comment"># 恢复 Session</span><br>tmux at [-t 会话名]<br><br><span class="hljs-comment"># 列出所有 Sessions</span><br>tmux <span class="hljs-built_in">ls</span><br><br><span class="hljs-comment"># 关闭 Session</span><br>tmux kill-session -t 会话名<br><br><span class="hljs-comment"># 关闭整个 Tmux 服务器</span><br>tmux kill-server<br></code></pre></td></tr></table></figure><h3 id="2-2-内部指令">2.2 内部指令</h3><blockquote><p>所谓内部指令，就是进入 Tmux 后，并按下前缀键后的指令，一般前缀键为 <code>Ctrl+b</code>。虽然 <code>Ctrl</code> 和 <code>b</code> 离得很远但是不建议改前缀键，因为别的键也不见得方便好记不冲突。还是记忆默认的比较可靠。</p></blockquote><ul><li>系统指令</li></ul><table><thead><tr><th>前缀</th><th>指令</th><th>描述</th></tr></thead><tbody><tr><td><code>Ctrl+b</code></td><td><code>?</code></td><td>显示快捷键帮助文档</td></tr><tr><td><code>Ctrl+b</code></td><td><code>d</code></td><td>断开当前会话</td></tr><tr><td><code>Ctrl+b</code></td><td><code>D</code></td><td>选择要断开的会话</td></tr><tr><td><code>Ctrl+b</code></td><td><code>Ctrl+z</code></td><td>挂起当前会话</td></tr><tr><td><code>Ctrl+b</code></td><td><code>r</code></td><td>强制重载当前会话，刷新配置文件</td></tr><tr><td><code>Ctrl+b</code></td><td><code>I</code></td><td>下载和更新插件</td></tr><tr><td><code>Ctrl+b</code></td><td><code>s</code></td><td>显示会话列表用于选择并切换</td></tr><tr><td><code>Ctrl+b</code></td><td><code>:</code></td><td>进入命令行模式，此时可直接输入ls等命令</td></tr><tr><td><code>Ctrl+b</code></td><td><code>[</code></td><td>进入复制模式，按 <code>q</code> 退出</td></tr><tr><td><code>Ctrl+b</code></td><td><code>]</code></td><td>粘贴复制模式中复制的文本</td></tr><tr><td><code>Ctrl+b</code></td><td><code>~</code></td><td>列出提示信息缓存</td></tr></tbody></table><ul><li>窗口（Window）指令</li></ul><table><thead><tr><th>前缀</th><th>指令</th><th>描述</th></tr></thead><tbody><tr><td><code>Ctrl+b</code></td><td><code>c</code></td><td>新建窗口</td></tr><tr><td><code>Ctrl+b</code></td><td><code>&amp;</code></td><td>关闭当前窗口</td></tr><tr><td><code>Ctrl+b</code></td><td><code>0~9</code></td><td>切换到指定窗口</td></tr><tr><td><code>Ctrl+b</code></td><td><code>p</code></td><td>切换到上一窗口</td></tr><tr><td><code>Ctrl+b</code></td><td><code>n</code></td><td>切换到下一窗口</td></tr><tr><td><code>Ctrl+b</code></td><td><code>w</code></td><td>打开窗口列表，用于且切换窗口</td></tr><tr><td><code>Ctrl+b</code></td><td><code>,</code></td><td>重命名当前窗口</td></tr><tr><td><code>Ctrl+b</code></td><td><code>.</code></td><td>修改当前窗口编号（适用于窗口重新排序）</td></tr><tr><td><code>Ctrl+b</code></td><td><code>f</code></td><td>快速定位到窗口（输入关键字匹配窗口名称）</td></tr></tbody></table><ul><li>面板（Panel）指令</li></ul><table><thead><tr><th>前缀</th><th>指令</th><th>描述</th></tr></thead><tbody><tr><td><code>Ctrl+b</code></td><td><code>&quot;</code></td><td>当前面板上下一分为二，下侧新建面板</td></tr><tr><td><code>Ctrl+b</code></td><td><code>%</code></td><td>当前面板左右一分为二，右侧新建面板</td></tr><tr><td><code>Ctrl+b</code></td><td><code>x</code></td><td>关闭当前面板（关闭前需确认）</td></tr><tr><td><code>Ctrl+b</code></td><td><code>z</code></td><td>最大化当前面板，再重复一次按键后恢复正常（v1.8 版本新增）</td></tr><tr><td><code>Ctrl+b</code></td><td><code>!</code></td><td>将当前面板移动到新的窗口打开（原窗口中存在两个及以上面板有效）</td></tr><tr><td><code>Ctrl+b</code></td><td><code>;</code></td><td>切换到最后一次使用的面板</td></tr><tr><td><code>Ctrl+b</code></td><td><code>q</code></td><td>显示面板编号，在编号消失前输入对应的数字可切换到相应的面板</td></tr><tr><td><code>Ctrl+b</code></td><td><code>&#123;</code></td><td>向前置换当前面板</td></tr><tr><td><code>Ctrl+b</code></td><td><code>&#125;</code></td><td>向后置换当前面板</td></tr><tr><td><code>Ctrl+b</code></td><td><code>Ctrl+o</code></td><td>顺时针旋转当前窗口中的所有面板</td></tr><tr><td><code>Ctrl+b</code></td><td>方向键</td><td>移动光标切换面板</td></tr><tr><td><code>Ctrl+b</code></td><td><code>o</code></td><td>选择下一面板</td></tr><tr><td><code>Ctrl+b</code></td><td>空格键</td><td>在自带的面板布局中循环切换</td></tr><tr><td><code>Ctrl+b</code></td><td><code>Alt</code>+方向键</td><td>以 5 个单元格为单位调整当前面板边缘</td></tr><tr><td><code>Ctrl+b</code></td><td><code>Ctrl</code>+方向键</td><td>以 1 个单元格为单位调整当前面板边缘</td></tr><tr><td><code>Ctrl+b</code></td><td><code>t</code></td><td>显示时钟</td></tr></tbody></table><h2 id="3-配置">3. 配置</h2><p>Tmux 的系统配置文件为 <code>/etc/tmux.conf</code>；用户配置文件路径为 <code>~/.tmux.conf</code>，一开始需要用户手动创建。当修改了 <code>.tmux.conf</code> 中的配置项后，需要重启 Tmux 使配置生效，即在 Tmux 中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">restart tmux<br></code></pre></td></tr></table></figure><p>或者在 Tmux 窗口中，先按下 <code>Ctrl+b</code> 指令前缀，再按 <code>:</code> 后输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">source-file ~/.tmux.conf<br></code></pre></td></tr></table></figure><h3 id="3-1-默认-Shell">3.1 默认 Shell</h3><p>Tmux 默认的 Shell 为 Bash Shell，可以添加以下配置项修改默认 Shell，比如修改为 Zsh Shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">set-option -g default-shell /bin/zsh<br></code></pre></td></tr></table></figure><p>或者使用以下配置项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">set-option -g default-command /bin/zsh<br></code></pre></td></tr></table></figure><p><code>default-command</code> 与 <code>default-shell</code> 的区别在于 <code>default-command</code> 的优先级更高，只有当 <code>default-command</code> 为空时，才会使用 <code>default-shell</code>。</p><h3 id="3-2-鼠标控制">3.2 鼠标控制</h3><p>Tmux 鼠标控制功能能够实现：</p><ul><li>选取文本</li><li>调整面板大小</li><li>选中并切换面板</li></ul><p>首先查看 Tmux 的版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tmux -V<br></code></pre></td></tr></table></figure><p>根据不同的版本编缉配置文件：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> ~/.tmux.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><ul><li>Tmux 2.1 之后的版本：</li></ul><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-built_in">set-option</span> -<span class="hljs-string">g</span> <span class="hljs-string">mouse</span> <span class="hljs-string">on</span><br></code></pre></td></tr></table></figure><ul><li>Tmux 2.1 之前版本：</li></ul><figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs hsp">setw -g <span class="hljs-keyword">mouse</span>-resize-pane <span class="hljs-keyword">on</span><br>setw -g <span class="hljs-keyword">mouse</span>-select-pane <span class="hljs-keyword">on</span><br>setw -g <span class="hljs-keyword">mouse</span>-select-window <span class="hljs-keyword">on</span><br>setw -g mode-<span class="hljs-keyword">mouse</span> <span class="hljs-keyword">on</span><br></code></pre></td></tr></table></figure><blockquote><p>配置文件 <code>.tmux.conf</code> 对所有之后新建的 Tmux Session 都会起作用。如果只想对当前的 Session 启用，可以先按 <code>Ctrl + B</code>，松开以后再输入冒号，然后输入上面的配置命令即可。</p></blockquote><h3 id="3-3-面板控制">3.3 面板控制</h3><ul><li>更改新增面板快捷键</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">unbind <span class="hljs-string">&#x27;&quot;&#x27;</span><br><span class="hljs-built_in">bind</span> - splitw -v -c <span class="hljs-string">&#x27;#&#123;pane_current_path&#125;&#x27;</span> <span class="hljs-comment"># 垂直方向新增面板，默认进入当前目录</span><br>unbind <span class="hljs-string">&#x27;%&#x27;</span><br><span class="hljs-built_in">bind</span> = splitw -h -c <span class="hljs-string">&#x27;#&#123;pane_current_path&#125;&#x27;</span> <span class="hljs-comment"># 水平方向新增面板，默认进入当前目录</span><br></code></pre></td></tr></table></figure><ul><li>面板调整大小快捷键</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">bind</span> -r ^k resizep -U 10 <span class="hljs-comment"># 绑定 Ctrl+k 为往 ↑ 调整面板边缘 10 个单元格</span><br><span class="hljs-built_in">bind</span> -r ^j resizep -D 10 <span class="hljs-comment"># 绑定 Ctrl+j 为往 ↓ 调整面板边缘 10 个单元格</span><br><span class="hljs-built_in">bind</span> -r ^h resizep -L 10 <span class="hljs-comment"># 绑定 Ctrl+h 为往 ← 调整面板边缘 10 个单元格</span><br><span class="hljs-built_in">bind</span> -r ^l resizep -R 10 <span class="hljs-comment"># 绑定 Ctrl+l 为往 → 调整面板边缘 10 个单元格</span><br></code></pre></td></tr></table></figure><h3 id="3-4-复制模式">3.4 复制模式</h3><p>修改 Tmux 的复制模式为 Vi 风格：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">setw -g mode-keys vi <span class="hljs-comment"># 开启 Vi 风格后，支持 Vi 的 C-d、C-u、hjkl 等快捷键</span><br><span class="hljs-built_in">bind</span> -t vi-copy v begin-selection <span class="hljs-comment"># 绑定 v 键为开始选择文本</span><br><span class="hljs-built_in">bind</span> -t vi-copy y copy-selection <span class="hljs-comment"># 绑定 y 键为复制选中文本</span><br><span class="hljs-built_in">bind</span> p pasteb <span class="hljs-comment"># 绑定 p 键为粘贴文本（p 键默认用于进入上一个窗口，不建议覆盖）</span><br></code></pre></td></tr></table></figure><h3 id="3-5-更多优化">3.5 更多优化</h3><ul><li>设置窗口面板起始序号</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">set</span> -g base-index 1 <span class="hljs-comment"># 设置窗口的起始下标为 1</span><br><span class="hljs-built_in">set</span> -g pane-base-index 1 <span class="hljs-comment"># 设置面板的起始下标为 1</span><br></code></pre></td></tr></table></figure><ul><li>自定义状态栏</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">set</span> -g status-utf8 on <span class="hljs-comment"># 状态栏支持utf8</span><br><span class="hljs-built_in">set</span> -g status-interval 1 <span class="hljs-comment"># 状态栏刷新时间</span><br><span class="hljs-built_in">set</span> -g status-justify left <span class="hljs-comment"># 状态栏列表左对齐</span><br>setw -g monitor-activity on <span class="hljs-comment"># 非当前窗口有内容更新时在状态栏通知</span><br><br><span class="hljs-built_in">set</span> -wg window-status-format <span class="hljs-string">&quot; #I #W &quot;</span> <span class="hljs-comment"># 状态栏窗口名称格式</span><br><span class="hljs-built_in">set</span> -wg window-status-current-format <span class="hljs-string">&quot; #I:#W#F &quot;</span> <span class="hljs-comment"># 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)</span><br><span class="hljs-built_in">set</span> -wg window-status-separator <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># 状态栏窗口名称之间的间隔</span><br></code></pre></td></tr></table></figure><h2 id="附录">附录</h2><ul><li><p><a href="https://www.cnblogs.com/zuoruining/p/11074367.html">Tmux 配置：打造最适合自己的终端复用工具</a></p></li><li><p><a href="https://louiszhai.github.io/2017/09/30/tmux/">Tmux使用手册</a></p></li><li><p><a href="https://kuanghy.github.io/2016/09/29/tmux">Tmux 简介与使用</a></p></li><li><p><a href="https://raycn.pub/2015/01/28/tmux-intruduction/">tmux 使用笔记</a></p></li><li><p><a href="https://segmentfault.com/a/1190000018032072">Tmux的超绝便利 （基础篇）</a></p></li><li><p><a href="https://man.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/tmux.1?query=tmux%26sec=1">Tmux Manual</a></p></li><li><p><a href="https://superuser.com/questions/253786/how-can-i-make-tmux-use-my-default-shell">How can I make tmux use my default shell?</a></p></li><li><p><a href="https://unix.stackexchange.com/questions/214068/configure-tmux-to-use-zsh">Configure tmux to use zsh</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;
&lt;p&gt;Tmux 是一款优秀的终端复用工具，使用它最直观的好处就是，通过一个终端登录远程主机并运行 &lt;code&gt;tmux&lt;/code&gt; 后，在其中可以开启多个控制台而无需再「浪费」多余的终端来连接这台远程主机。Tmux 提供了非常多</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="Tools" scheme="https://blueheart0621.github.io/categories/Technique/Tools/"/>
    
    <category term="Tmux" scheme="https://blueheart0621.github.io/categories/Technique/Tools/Tmux/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="Tools" scheme="https://blueheart0621.github.io/tags/Tools/"/>
    
    <category term="Tmux" scheme="https://blueheart0621.github.io/tags/Tmux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu20.04终端配置Clash代理</title>
    <link href="https://blueheart0621.github.io/2022/11/06/Technique/Linux/Ubuntu/Ubuntu20.04%E7%BB%88%E7%AB%AF%E9%85%8D%E7%BD%AEClash%E4%BB%A3%E7%90%86/"/>
    <id>https://blueheart0621.github.io/2022/11/06/Technique/Linux/Ubuntu/Ubuntu20.04%E7%BB%88%E7%AB%AF%E9%85%8D%E7%BD%AEClash%E4%BB%A3%E7%90%86/</id>
    <published>2022-11-06T08:23:57.000Z</published>
    <updated>2022-11-18T07:07:01.993Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介">1. 简介</h2><p>对于日常使用的桌面系统，我们直接使用已有的 <a href="https://github.com/Fndroid/clash_for_windows_pkg">Clash GUI 客户端</a>就可以很方便地实现代理。但对于服务器系统来说，往往都是非 GUI 的，因此我们只能通过 CLI 来配置代理。个人目前使用 Clash + Proxychains 组合。</p><h2 id="2-Clash">2. Clash</h2><p>Clash 用来实现网络流量的代理转发。</p><h3 id="2-1-安装">2.1 安装</h3><p>去 <a href="https://github.com/Dreamacro/clash/releases/">Clash 开源仓库</a>下载对应的系统版本到服务器上合适的位置，然后解压、重命名并提权。解压 <code>.gz</code> 包使用 <code>gunzip</code> 命令，以个人操作为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> clash<br><span class="hljs-built_in">cd</span> clash<br><span class="hljs-comment"># 将 clash 包放置在此目录下</span><br>gunzip clash-linux-amd64-v3-v1.11.12.gz <span class="hljs-comment"># 解压</span><br><span class="hljs-built_in">mv</span> clash-linux-amd64-v3-v1.11.12 clash<span class="hljs-comment"># 重命名</span><br></code></pre></td></tr></table></figure><h3 id="2-2-配置">2.2 配置</h3><p>从自己的订阅机场获取到对应的订阅配置文件，重命名为 <code>config.yaml</code>，然后上转到服务器上的相同目录下。或者也可以直接从本地的 Clash GUI 客户端拿到其下载好的 <code>config.yaml</code> 文件上传到服务器（以及 <code>Country.mmdb</code> 也可一起上传）。然后便可以启动 Clash：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> clash<br>./clash -d .<br></code></pre></td></tr></table></figure><p>如果需要报错端口已被占用，可以打开 <code>config.yml</code> 修改成其它端口。</p><p>此外，为了方便使用，还可以创建一个 Systemd 服务进程来维护 Clash，创建并编辑文件 <code>~/.config/systemd/user/clash.service</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br>Description=Clash Daemon<br><br>[Service]<br>ExecStart=/data/zhangjianghui/clash/clash -d /data/zhangjianghui/clash<br><br>[Install]<br>WantedBy=default.target<br></code></pre></td></tr></table></figure><p>然后使用以下命令启动/关闭服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl --user <span class="hljs-built_in">enable</span> clash.service <span class="hljs-comment"># 开机自启</span><br>systemctl --user start clash.service <span class="hljs-comment"># 启动</span><br>systemctl --user stop clash.service <span class="hljs-comment"># 停止</span><br>systemctl --user status clash.service <span class="hljs-comment"># 查看服务状态</span><br></code></pre></td></tr></table></figure><p>如果查看服务状态正常，则说明配置完成。</p><h2 id="3-Proxychains">3. Proxychains</h2><p>Proxychains 用来重定向网络连接，在所有命令前加上 <code>proxychains</code>，则会强制命令通过 Proxychains 指定的代理网址和端口访问网络。</p><h3 id="3-1-安装">3.1 安装</h3><p>首先安装 Proxychains，在 Ubuntu20.04 上最新版为 <code>proxychains4</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install proxychains4<br></code></pre></td></tr></table></figure><p>如果无 Root 权限，可以本地编译安装。首先到 <a href="https://github.com/rofl0r/proxychains-ng">Proxychains-NG</a> 仓库下载好软件包，然后解压，进入目录开始本地编译安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --prefix=/path/to/install<br>make<br>make install<br></code></pre></td></tr></table></figure><p>运行正常后即成功将 Proxychains-NG 安装到了 <code>/path/to/install</code> 中，<code>/path/to/install</code> 一般建议设置为目录 <code>$HOME/.local</code>。安装成功后，还需要将 <code>/path/to/install/bin</code> 加入到 Shell 的 <code>PATH</code> 环境变量中。以 Bash Shell 为例，将以下配置追加到 <code>~/.bashrc</code> 中（如果已有该配置则跳过）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;HOME&#125;</span>/.local/bin:<span class="hljs-variable">$PATH</span>&quot;</span><br></code></pre></td></tr></table></figure><p>配置完 <code>PATH</code> 环境变量后，重启 Shell，即可在 Shell 下正常使用 <code>proxychains</code> 或 <code>proxychains4</code> 命令了。</p><h3 id="3-2-配置">3.2 配置</h3><p>然后配置 Proxychains 的代理网址和端口。由于我们已经在本地配置并启动了 Clash 服务，故 Clash 的代理网址和端口也是我们需要配置给 Proxychains 的，具体查看 Clash 目录下的 <code>config.yaml</code> 中的配置。以个人为例，创建并编辑文件 <code>~/.proxychains/proxychains.conf</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[ProxyList]<br>socks5  127.0.0.1 1089<br><span class="hljs-comment">#http   127.0.0.1 1089</span><br><span class="hljs-comment">#https  127.0.0.1 1089</span><br></code></pre></td></tr></table></figure><p>配置完后，可以使用以下命令测试能否正常访问外网：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">proxychains curl -sSf www.google.com &gt; /dev/null<br></code></pre></td></tr></table></figure><p>以后如果想要使用代理，则在命令前加上 <code>proxychains</code> 即可；如果不想要使用代理，则不用加 <code>proxychains</code>，正常使用命令即可。</p><h2 id="附录">附录</h2><ul><li><a href="https://hsingko.github.io/post/2021/07/05/how-to-use-clash-subscribe">在 linux 上使用 clash 订阅</a></li><li><a href="https://zhuanlan.zhihu.com/p/385463291">linux系统中使用ProxyChains设置网络代理</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;
&lt;p&gt;对于日常使用的桌面系统，我们直接使用已有的 &lt;a href=&quot;https://github.com/Fndroid/clash_for_windows_pkg&quot;&gt;Clash GUI 客户端&lt;/a&gt;就可以很方便地实现代理。但对</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="Linux" scheme="https://blueheart0621.github.io/categories/Technique/Linux/"/>
    
    <category term="Ubuntu" scheme="https://blueheart0621.github.io/categories/Technique/Linux/Ubuntu/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="Linux" scheme="https://blueheart0621.github.io/tags/Linux/"/>
    
    <category term="Ubuntu" scheme="https://blueheart0621.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>笔记+复习</title>
    <link href="https://blueheart0621.github.io/2022/10/27/Life/%E7%94%9F%E4%BA%A7%E5%8A%9B/%E7%AC%94%E8%AE%B0+%E5%A4%8D%E4%B9%A0/"/>
    <id>https://blueheart0621.github.io/2022/10/27/Life/%E7%94%9F%E4%BA%A7%E5%8A%9B/%E7%AC%94%E8%AE%B0+%E5%A4%8D%E4%B9%A0/</id>
    <published>2022-10-27T12:59:21.000Z</published>
    <updated>2022-11-18T07:07:01.935Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介">1. 简介</h2><p>上中学时，我总是为每个课程都设定若干笔记本，或在上课时记录老师讲课的重点，或在下课时记录自己的心得/摘录。然后固定在每周的不同早习/晚习课，复习自己的各科笔记。上大学以后，知识/信息爆增，浩如烟海，手写笔记越来越少，也越来越不现实。于是我便基本放弃记笔记来巩固知识的方式，转而开始写博客。但博客这种东西没法做到随时随地的记录和巩固，一般得有电脑/平板在手边才行。直到我偶然间了解到 Anki~~（相见恨晚）~~……</p><p>Anki 是一款开源免费且跨平台的笔记记录和管理软件：</p><ul><li>作为电子笔记本，它可以插入文字、图片、音频、视频等，凡事皆可记录……</li><li>按照艾宾浩斯遗忘曲线给用户安排合理的复习频率（类似很多的背单词软件）。</li><li>提供多平台同步功能，随时随地记录/复习，充分利用碎片化时间。</li><li>提供笔记导入/导出功能，方便用户迁移/备份笔记。</li><li>提供自定义复习模板功能，Anki 默认有「填空题」、「问答题」的笔记复习模板，用户也可以自定义更多适合自己的模板。</li><li>提供免费共享/获取共享笔记的功能，有很多超级棒的共享笔记可供下载。</li><li>有很多非常有用的第三方插件。</li><li>……</li></ul><blockquote><p>Anki 是我滴神！</p></blockquote><h2 id="2-安装">2. 安装</h2><table><thead><tr><th>平台</th><th>地址</th></tr></thead><tbody><tr><td>Android</td><td><a href="https://github.com/ankidroid/Anki-Android">🔗</a></td></tr><tr><td>Windows/Linux/Mac</td><td><a href="https://github.com/ankitects/anki">🔗</a></td></tr></tbody></table><p>安装完成后，到<a href="https://ankiweb.net/account/login">官网</a>注册一个免费帐号，然后在所有平台上的 Anki 登录，方便后续的跨平台笔记同步。</p><h2 id="3-笔记-复习">3. 笔记+复习</h2><p>一般「创建牌组」作为一个大类，然后在「牌组」里面「添加」笔记即可。也可以通过「获取牌组」，浏览网上热门的共享笔记，并可以下载到本地进行导入（吹爆！）。Anki 更多功能可以自行探索，或者参考官方的<a href="https://docs.ankiweb.net/">使用文档</a>。</p><h2 id="附录">附录</h2><ul><li><a href="https://www.zhihu.com/question/28335314">Anki 怎么用？</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;
&lt;p&gt;上中学时，我总是为每个课程都设定若干笔记本，或在上课时记录老师讲课的重点，或在下课时记录自己的心得/摘录。然后固定在每周的不同早习/晚习课，复习自己的各科笔记。上大学以后，知识/信息爆增，浩如烟海，手写笔记越来越少，也越来越</summary>
      
    
    
    
    <category term="Life" scheme="https://blueheart0621.github.io/categories/Life/"/>
    
    <category term="生产力" scheme="https://blueheart0621.github.io/categories/Life/%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    
    
    <category term="Life" scheme="https://blueheart0621.github.io/tags/Life/"/>
    
    <category term="生产力" scheme="https://blueheart0621.github.io/tags/%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>Windows10网络相关问题</title>
    <link href="https://blueheart0621.github.io/2022/10/08/Technique/Windows/Windows10%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    <id>https://blueheart0621.github.io/2022/10/08/Technique/Windows/Windows10%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</id>
    <published>2022-10-08T08:45:43.000Z</published>
    <updated>2022-11-18T07:07:02.091Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-浏览器可以正常上网，但右下角的网络标识一直显示未连接到网络，微软家的软件无法登录，总是报错：Can’t-Connect-To-This-Network-Error">1. 浏览器可以正常上网，但右下角的网络标识一直显示未连接到网络，微软家的软件无法登录，总是报错：<code>Can’t Connect To This Network Error</code></h3><ul><li>问题：Windows10 系统的大无语问题，至今无法找到具体解释，怀疑是 Bug ……</li><li>解决：将使用的网卡禁用 IPv6，具体步骤为：「控制面板」-&gt;「网络和 Internet」-&gt;「网络连接」-&gt;对应网卡右键「属性」-&gt;取消勾选「Internet 协议版本 6（TCP/IPv6）」-&gt;「确定」，然后重新断开/连接网络。</li></ul><h2 id="附录">附录</h2><ul><li><a href="https://www.softwaretestinghelp.com/solved-cant-connect-to-this-network-error">Solved: Can’t Connect To This Network Error [14 Possible Fixes]</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-浏览器可以正常上网，但右下角的网络标识一直显示未连接到网络，微软家的软件无法登录，总是报错：Can’t-Connect-To-This-Network-Error&quot;&gt;1. 浏览器可以正常上网，但右下角的网络标识一直显示未连接到网络，微软家的软件无法登录，总是报</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/categories/Technique/Windows/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>微软商店等绕过Clash代理</title>
    <link href="https://blueheart0621.github.io/2022/10/06/Technique/Net/Proxy/Clash/%E5%BE%AE%E8%BD%AF%E5%95%86%E5%BA%97%E7%AD%89%E7%BB%95%E8%BF%87Clash%E4%BB%A3%E7%90%86/"/>
    <id>https://blueheart0621.github.io/2022/10/06/Technique/Net/Proxy/Clash/%E5%BE%AE%E8%BD%AF%E5%95%86%E5%BA%97%E7%AD%89%E7%BB%95%E8%BF%87Clash%E4%BB%A3%E7%90%86/</id>
    <published>2022-10-06T01:25:49.000Z</published>
    <updated>2022-11-18T07:07:02.053Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介">1. 简介</h2><p>在 Windows 10 系统下，使用网络代理后，诸如微软商店等软件都无法正常访问到网络。目前的一种解决办法是将微软家那些软件访问的域名都加入网络代理白名单，在白名单上的网址将不走代理。</p><h2 id="2-Clash-配置">2. Clash 配置</h2><p>「Clash 主面板」-&gt;「Settings」-&gt;「System Proxy」-&gt;「Bypass Domain/IPNet」，编辑追加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">- login.live.com<br>- account.live.com<br>- clientconfig.passport.net<br>- wustat.windows.com<br>- <span class="hljs-string">&quot;*.windowsupdate.com&quot;</span><br>- <span class="hljs-string">&quot;*.wns.windows.com&quot;</span><br>- <span class="hljs-string">&quot;*.hotmail.com&quot;</span><br>- <span class="hljs-string">&quot;*.outlook.com&quot;</span><br>- <span class="hljs-string">&quot;*.microsoft.com&quot;</span><br>- <span class="hljs-string">&quot;*.msftncsi.com&quot;</span><br></code></pre></td></tr></table></figure><p>然后重启 Clash 即可。</p><h2 id="附录">附录</h2><ul><li><a href="https://superuser.com/questions/1612884/microsoft-store-cant-connect-to-internet">Microsoft Store can't connect to internet</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;
&lt;p&gt;在 Windows 10 系统下，使用网络代理后，诸如微软商店等软件都无法正常访问到网络。目前的一种解决办法是将微软家那些软件访问的域名都加入网络代理白名单，在白名单上的网址将不走代理。&lt;/p&gt;
&lt;h2 id=&quot;2-Clas</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="Net" scheme="https://blueheart0621.github.io/categories/Technique/Net/"/>
    
    <category term="Proxy" scheme="https://blueheart0621.github.io/categories/Technique/Net/Proxy/"/>
    
    <category term="Clash" scheme="https://blueheart0621.github.io/categories/Technique/Net/Proxy/Clash/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="Net" scheme="https://blueheart0621.github.io/tags/Net/"/>
    
    <category term="Proxy" scheme="https://blueheart0621.github.io/tags/Proxy/"/>
    
    <category term="Clash" scheme="https://blueheart0621.github.io/tags/Clash/"/>
    
  </entry>
  
  <entry>
    <title>STL容器概述</title>
    <link href="https://blueheart0621.github.io/2022/10/03/Technique/C++/STL/STL%E5%AE%B9%E5%99%A8%E6%A6%82%E8%BF%B0/STL%E5%AE%B9%E5%99%A8%E6%A6%82%E8%BF%B0/"/>
    <id>https://blueheart0621.github.io/2022/10/03/Technique/C++/STL/STL%E5%AE%B9%E5%99%A8%E6%A6%82%E8%BF%B0/STL%E5%AE%B9%E5%99%A8%E6%A6%82%E8%BF%B0/</id>
    <published>2022-10-03T11:35:10.000Z</published>
    <updated>2022-11-18T07:07:01.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-STL-容器总览">1. STL 容器总览</h2><h3 id="1-1-成员函数">1.1 成员函数</h3><img src="/images/Technique/C++/STL/STL%E5%AE%B9%E5%99%A8%E6%A6%82%E8%BF%B0/MemberFunction.svg" class="" width="2114" title="MemberFunction"><h3 id="1-2-非成员函数">1.2 非成员函数</h3><img src="/images/Technique/C++/STL/STL%E5%AE%B9%E5%99%A8%E6%A6%82%E8%BF%B0/NonMemberFunction.svg" class="" width="2131" title="NonMemberFunction"><h2 id="附录">附录</h2><ul><li><a href="https://en.cppreference.com/w/cpp/container">Containers library - C++</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-STL-容器总览&quot;&gt;1. STL 容器总览&lt;/h2&gt;
&lt;h3 id=&quot;1-1-成员函数&quot;&gt;1.1 成员函数&lt;/h3&gt;
&lt;img src=&quot;/images/Technique/C++/STL/STL%E5%AE%B9%E5%99%A8%E6%A6%82%E8%B</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="C++" scheme="https://blueheart0621.github.io/categories/Technique/C/"/>
    
    <category term="STL" scheme="https://blueheart0621.github.io/categories/Technique/C/STL/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="C++" scheme="https://blueheart0621.github.io/tags/C/"/>
    
    <category term="STL" scheme="https://blueheart0621.github.io/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title>时间管理+事情记录</title>
    <link href="https://blueheart0621.github.io/2022/10/01/Life/%E7%94%9F%E4%BA%A7%E5%8A%9B/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86+%E4%BA%8B%E6%83%85%E8%AE%B0%E5%BD%95/"/>
    <id>https://blueheart0621.github.io/2022/10/01/Life/%E7%94%9F%E4%BA%A7%E5%8A%9B/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86+%E4%BA%8B%E6%83%85%E8%AE%B0%E5%BD%95/</id>
    <published>2022-10-01T03:41:20.000Z</published>
    <updated>2022-11-18T07:07:01.935Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介">1. 简介</h2><p>一直以来用了很多时间管理/日程安排工具来规划自己的时间和事情，但总是没法很好地执行，<s>以至于每次规划的有效期不超过两周</s>。比如，在手机上使用相关的软件时，只会在玩手机的时候注意到；而在电脑上使用相关的软件时，又只是在工作时才会注意到。而且，这些软件大部分都是平台不互通的，要么是只能在 Android 上使用，要么是只能在 IPad 上使用，或者只能在网页上使用。比如手机上自带的记事本，的确很方便，我之前时常用来记录自己一些重要的事情。但问题在于一旦离开手机就无法访问到自己的记录，而手机又主要是用来通讯的，即使正在使用手机也很容易沉溺于回消息而时常忘记去回顾记事本。</p><p><s>经过第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 次失败后的反省</s>，我终于意识到，为什么不配置一个跨平台的时间管理+事情记录的环境呢？经过一番搜索，微软家的 Outlook + OneNote 就可以很好地满足需求（唯一美中不足的是 Outlook 没有 Linux 版）。</p><blockquote><p>相信，这次规化肯定能长期执行下去的，<s>吧？</s></p></blockquote><p>个人的跨平台需求是 Android（手机）+ IOS（IPad）+ Windows（电脑）：</p><ul><li>手机主要用来通讯，传递信息和获取信息；</li><li>IPad 主要用来记笔记，打草稿，看电子档等；</li><li>电脑主要用来打游戏、学习和办公。</li></ul><h2 id="2-创建帐号">2. 创建帐号</h2><p>微软的 Outlook 和 OneNote 都可以使用 Outlook 邮箱帐号进行同步。因此，首先去 <a href="https://outlook.live.com/">Outlook 官网</a> 上注册创建一个帐号。</p><blockquote><p>OneNote 笔记是保留在注册帐号的 OneDrive 云盘中的。</p></blockquote><h2 id="3-时间管理-事情记录">3. 时间管理 + 事情记录</h2><ul><li><p>时间管理使用 Outlook 带的日历功能。</p><blockquote><p>在 Android 上安装 Outlook 后，可以将 Outlook 日历同步到手机日历中。具体做法是：到设置中给 Outlook 开启「存储」和「日历」权限，然后到 Outlook 设置中开启「同步日历」的功能。在 IOS 上安装 Outlook 后，Outlook 日历会自动同步到 IPad 日历中。</p></blockquote></li><li><p>事情记录使用 OneNote 软件。</p><blockquote><p>在 Android 上安装 OneNote 软件后，需要给其开启「存储」权限。在 IOS 上安装 OneNote 软件后，如果遇到无法登录的情况，可能到设置中「重置 OneNote」-&gt;「删除登录凭据」。</p></blockquote></li></ul><h2 id="附录">附录</h2><ul><li><a href="https://answers.microsoft.com/zh-hans/msoffice/forum/all/onenote%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AE/512eec7a-2aea-4c36-a648-a2dc610852ee">onenote 无法设置你的第一个笔记本</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;
&lt;p&gt;一直以来用了很多时间管理/日程安排工具来规划自己的时间和事情，但总是没法很好地执行，&lt;s&gt;以至于每次规划的有效期不超过两周&lt;/s&gt;。比如，在手机上使用相关的软件时，只会在玩手机的时候注意到；而在电脑上使用相关的软件时，又只是</summary>
      
    
    
    
    <category term="Life" scheme="https://blueheart0621.github.io/categories/Life/"/>
    
    <category term="生产力" scheme="https://blueheart0621.github.io/categories/Life/%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    
    
    <category term="Life" scheme="https://blueheart0621.github.io/tags/Life/"/>
    
    <category term="生产力" scheme="https://blueheart0621.github.io/tags/%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>AI会议接收论文列表汇总</title>
    <link href="https://blueheart0621.github.io/2022/09/12/Research/Sundry/AI%E4%BC%9A%E8%AE%AE%E6%8E%A5%E6%94%B6%E8%AE%BA%E6%96%87%E5%88%97%E8%A1%A8%E6%B1%87%E6%80%BB/"/>
    <id>https://blueheart0621.github.io/2022/09/12/Research/Sundry/AI%E4%BC%9A%E8%AE%AE%E6%8E%A5%E6%94%B6%E8%AE%BA%E6%96%87%E5%88%97%E8%A1%A8%E6%B1%87%E6%80%BB/</id>
    <published>2022-09-12T13:05:53.000Z</published>
    <updated>2022-11-18T07:07:02.106Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Conferences-accepted-paper-lists">Conferences' accepted paper lists</h1><p>❗ 建议使用 <a href="https://dblp.uni-trier.de/">dblp</a> 和 <a href="https://www.aminer.cn/conf">Aminer</a> 查询。</p><h2 id="Quick-Link">Quick Link</h2><table><thead><tr><th>Conference:</th><th><a href="#AAAI">AAAI</a></th><th><a href="#IJCAI">IJCAI</a></th><th><a href="#KDD">KDD</a></th><th><a href="#WWW">WWW</a></th><th><a href="#ICLR">ICLR </a></th><th><a href="#ICML">ICML</a></th><th><a href="#NeurIPS">NeurIPS</a></th><th><a href="#CIKM">CIKM</a></th></tr></thead><tbody><tr><td>2017</td><td><a href="https://www.aaai.org/Conferences/AAAI/2017/aaai17accepted-papers.pdf">🔗</a></td><td><a href="https://ijcai-17.org/accepted-papers.html">🔗</a></td><td><a href="https://www.kdd.org/kdd2017/accepted-papers">🔗</a></td><td><a href="https://dl.acm.org/doi/proceedings/10.1145/3308558">🔗</a></td><td></td><td></td><td><a href="https://papers.nips.cc/paper/2017">🔗</a></td><td></td></tr><tr><td>2018</td><td><a href="https://aaai.org/Conferences/AAAI-18/wp-content/uploads/2017/12/AAAI-18-Accepted-Paper-List.Web_.pdf">🔗</a></td><td><a href="https://www.ijcai-18.org/accepted-papers/index.html">🔗</a></td><td><a href="https://www.kdd.org/kdd2018/accepted-papers">🔗</a></td><td><a href="https://dl.acm.org/doi/proceedings/10.5555/3178876">🔗</a></td><td></td><td></td><td><a href="https://papers.nips.cc/paper/2018">🔗</a></td><td></td></tr><tr><td>2019</td><td><a href="https://aaai.org/Conferences/AAAI-19/wp-content/uploads/2018/11/AAAI-19_Accepted_Papers.pdf">🔗</a></td><td><a href="https://www.ijcai19.org/accepted-papers.html">🔗</a></td><td><a href="https://www.kdd.org/kdd2019/accepted-papers">🔗</a></td><td><a href="https://www2019.thewebconf.org/accepted-papers">🔗</a></td><td></td><td><a href="https://icml.cc/Conferences/2019/Schedule">🔗</a></td><td><a href="https://papers.nips.cc/paper/2019">🔗</a></td><td></td></tr><tr><td>2020</td><td><a href="https://aaai.org/Conferences/AAAI-20/wp-content/uploads/2020/01/AAAI-20-Accepted-Paper-List.pdf">🔗</a></td><td><a href="http://static.ijcai.org/2020-accepted_papers.htm">🔗</a></td><td><a href="https://www.kdd.org/kdd2020/accepted-papers">🔗</a></td><td><a href="https://dl.acm.org/doi/proceedings/10.1145/3366423">🔗</a></td><td><a href="https://openreview.net/group?id=ICLR.cc/2020/Conference">🔗</a></td><td><a href="https://icml.cc/Conferences/2020/Schedule">🔗</a></td><td><a href="https://papers.nips.cc/paper/2020">🔗</a></td><td><a href="https://www.cikm2020.org/index.html@p=1073.html">🔗</a></td></tr><tr><td>2021</td><td><a href="https://aaai.org/Conferences/AAAI-21/wp-content/uploads/2020/12/AAAI-21_Accepted-Paper-List.Main_.Technical.Track_.pdf">🔗</a></td><td><a href="https://ijcai-21.org/program-main-track">🔗</a></td><td><a href="https://kdd.org/kdd2021/accepted-papers">🔗</a></td><td><a href="https://www2021.thewebconf.org/program/papers/">🔗</a></td><td><a href="https://openreview.net/group?id=ICLR.cc/2021/Conference">🔗</a></td><td><a href="https://icml.cc/Conferences/2021/Schedule">🔗</a></td><td><a href="https://papers.nips.cc/paper/2021">🔗</a></td><td><a href="https://www.cikm2021.org/accepted-papers">🔗</a></td></tr><tr><td>2022</td><td><a href="https://aaai.org/Conferences/AAAI-22/wp-content/uploads/2021/12/AAAI-22_Accepted_Paper_List_Main_Technical_Track.pdf">🔗</a></td><td><a href="https://ijcai-22.org/main-track-accepted-papers/">🔗</a></td><td><a href="https://kdd.org/kdd2022/paperRT.html">🔗</a></td><td><a href="https://www2022.thewebconf.org/accepted-papers/">🔗</a></td><td><a href="https://openreview.net/group?id=ICLR.cc/2022/Conference">🔗</a></td><td><a href="https://icml.cc/Conferences/2022/Schedule">🔗</a></td><td><a href="https://neurips.cc/virtual/2022/papers.html?filter=titles">🔗</a></td><td><a href="https://www.cikm2022.org/papers-posters">🔗</a></td></tr><tr><td>2023</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="AAAI">AAAI</h2><table><thead><tr><th>Conference</th><th>Source</th><th>Deadline</th><th>Notification</th></tr></thead><tbody><tr><td>AAAI-23</td><td></td><td>August 15, 2021</td><td>November 18, 2022</td></tr><tr><td>AAAI-22</td><td><a href="https://aaai.org/Conferences/AAAI-22/wp-content/uploads/2021/12/AAAI-22_Accepted_Paper_List_Main_Technical_Track.pdf">🔗</a></td><td>September 8, 2021</td><td>November 29, 2021</td></tr><tr><td>AAAI-21</td><td><a href="https://aaai.org/Conferences/AAAI-21/wp-content/uploads/2020/12/AAAI-21_Accepted-Paper-List.Main_.Technical.Track_.pdf">🔗</a></td><td></td><td></td></tr><tr><td>AAAI-20</td><td><a href="https://aaai.org/Conferences/AAAI-20/wp-content/uploads/2020/01/AAAI-20-Accepted-Paper-List.pdf">🔗</a></td><td></td><td></td></tr><tr><td>AAAI-19</td><td><a href="https://aaai.org/Conferences/AAAI-19/wp-content/uploads/2018/11/AAAI-19_Accepted_Papers.pdf">🔗</a></td><td></td><td></td></tr><tr><td>AAAI-18</td><td><a href="https://aaai.org/Conferences/AAAI-18/wp-content/uploads/2017/12/AAAI-18-Accepted-Paper-List.Web_.pdf">🔗</a></td><td></td><td></td></tr><tr><td>AAAI-17</td><td><a href="https://www.aaai.org/Conferences/AAAI/2017/aaai17accepted-papers.pdf">🔗</a></td><td></td><td></td></tr><tr><td>AAAI-16</td><td><a href="https://www.aaai.org/Conferences/AAAI/2016/aaai16accepted-papers.pdf">🔗</a></td><td></td><td></td></tr><tr><td>AAAI-15</td><td><a href="https://www.aaai.org/Conferences/AAAI/2015/iaai15accepted-papers.pdf">🔗</a></td><td></td><td></td></tr><tr><td>AAAI-14</td><td><a href="https://www.aaai.org/Conferences/AAAI/2014/aaai14accepts.php">🔗</a></td><td></td><td></td></tr><tr><td>AAAI-13</td><td><a href="https://www.aaai.org/Conferences/AAAI/2013/aaai13accepts.php">🔗</a></td><td></td><td></td></tr></tbody></table><h2 id="IJCAI"><a href="https://www.ijcai.org/past_proceedings">IJCAI</a></h2><table><thead><tr><th>Conference</th><th>Source</th><th>Deadline</th><th>Notification</th></tr></thead><tbody><tr><td>IJCAI-23</td><td></td><td></td><td></td></tr><tr><td>IJCAI-22</td><td><a href="https://ijcai-22.org/main-track-accepted-papers/">🔗</a></td><td>January 14, 2022</td><td>April 20, 2022</td></tr><tr><td>IJCAI-21</td><td><a href="https://ijcai-21.org/program-main-track/">🔗</a></td><td></td><td></td></tr><tr><td>IJCAI-20</td><td><a href="http://static.ijcai.org/2020-accepted_papers.html">🔗</a></td><td></td><td></td></tr><tr><td>IJCAI-19</td><td><a href="https://www.ijcai19.org/accepted-papers.html">🔗</a></td><td></td><td></td></tr><tr><td>IJCAI-18</td><td><a href="https://www.ijcai-18.org/accepted-papers/index.html">🔗</a></td><td></td><td></td></tr><tr><td>IJCAI-17</td><td><a href="https://ijcai-17.org/accepted-papers.html">🔗</a></td><td></td><td></td></tr><tr><td>IJCAI-16</td><td><a href="https://www.ijcai.org/proceedings/2016">🔗</a></td><td></td><td></td></tr><tr><td>IJCAI-15</td><td><a href="https://www.ijcai.org/Proceedings/2015">🔗</a></td><td></td><td></td></tr><tr><td>IJCAI-14</td><td>None</td><td></td><td></td></tr></tbody></table><h2 id="KDD">KDD</h2><blockquote><p>Format : <a href="https://www.kdd.org/kdd20xx/accepted-papers">https://www.kdd.org/kdd20xx/accepted-papers</a></p></blockquote><table><thead><tr><th>Conference</th><th>Source</th><th>Deadline</th><th>Notification</th></tr></thead><tbody><tr><td>KDD-23</td><td></td><td></td><td></td></tr><tr><td>KDD-22</td><td><a href="https://kdd.org/kdd2022/paperRT.html">🔗</a></td><td>Feb 10th, 2022</td><td>May 19th, 2022</td></tr><tr><td>KDD-21</td><td><a href="https://kdd.org/kdd2021/accepted-papers">🔗</a></td><td></td><td></td></tr><tr><td>KDD-20</td><td><a href="https://www.kdd.org/kdd2020/accepted-papers">🔗</a></td><td></td><td></td></tr><tr><td>KDD-19</td><td><a href="https://www.kdd.org/kdd2019/accepted-papers">🔗</a></td><td></td><td></td></tr><tr><td>KDD-18</td><td><a href="https://www.kdd.org/kdd2018/accepted-papers">🔗</a></td><td></td><td></td></tr><tr><td>KDD-17</td><td><a href="https://www.kdd.org/kdd2017/accepted-papers">🔗</a></td><td></td><td></td></tr></tbody></table><h2 id="WWW">WWW</h2><p>TheWebConf</p><table><thead><tr><th>Conference</th><th>Source</th><th>Deadline</th><th>Notification</th></tr></thead><tbody><tr><td>WWW-23</td><td></td><td>2022-10-13</td><td>2023-01-25</td></tr><tr><td>WWW-22</td><td><a href="https://www2022.thewebconf.org/accepted-papers/">🔗</a></td><td>2021-10-21 ...</td><td>2022-01-13 ...</td></tr><tr><td>WWW-21</td><td><a href="https://www2021.thewebconf.org/program/papers/">🔗</a></td><td></td><td></td></tr><tr><td>WWW-20</td><td><a href="https://dl.acm.org/doi/proceedings/10.1145/3366423">🔗</a></td><td></td><td></td></tr><tr><td>WWW-19</td><td><a href="https://www2019.thewebconf.org/accepted-papers">🔗</a></td><td></td><td></td></tr><tr><td>WWW-18</td><td><a href="https://dl.acm.org/doi/proceedings/10.5555/3178876">🔗</a></td><td></td><td></td></tr><tr><td>WWW-17</td><td><a href="https://dl.acm.org/doi/proceedings/10.1145/3308558">🔗</a></td><td></td><td></td></tr></tbody></table><h2 id="ICLR">ICLR</h2><p>FInding it on openreview:</p><blockquote><p><a href="https://openreview.net/group?id=ICLR.cc/20xx/Conferenceeg:">https://openreview.net/group?id=ICLR.cc/20xx/Conferenceeg:</a></p></blockquote><table><thead><tr><th>Conference</th><th>Source</th><th>Deadline</th><th>Notification</th></tr></thead><tbody><tr><td>ICLR 2023</td><td></td><td>2022-09-28</td><td>2023-01-20</td></tr><tr><td>ICLR 2022</td><td><a href="https://openreview.net/group?id=ICLR.cc/2022/Conference">🔗</a></td><td>2021-10-06</td><td>2022-01-24</td></tr><tr><td>ICLR 2021</td><td><a href="https://openreview.net/group?id=ICLR.cc/2021/Conference">🔗</a></td><td></td><td></td></tr><tr><td>ICLR 2020</td><td><a href="https://openreview.net/group?id=ICLR.cc/2020/Conference">🔗</a></td><td></td><td></td></tr></tbody></table><h2 id="ICML">ICML</h2><blockquote><p>Format <a href="https://icml.cc/Conferences/20xx/Schedule">https://icml.cc/Conferences/20xx/Schedule</a></p></blockquote><table><thead><tr><th>Conference</th><th>Source</th><th>Deadline</th><th>Notification</th></tr></thead><tbody><tr><td>ICML 2023</td><td></td><td></td><td></td></tr><tr><td>ICML 2022</td><td><a href="https://icml.cc/Conferences/2022/Schedule">🔗</a></td><td>Jan 27, 2022</td><td></td></tr><tr><td>ICML 2021</td><td><a href="https://icml.cc/Conferences/2021/Schedule">🔗</a></td><td></td><td></td></tr><tr><td>ICML 2020</td><td><a href="https://icml.cc/Conferences/2020/Schedule">🔗</a></td><td></td><td></td></tr><tr><td>ICML 2019</td><td><a href="https://icml.cc/Conferences/2019/Schedule">🔗</a></td><td></td><td></td></tr></tbody></table><h2 id="NeurIPS">NeurIPS</h2><p><a href="https://papers.nips.cc/">All Links</a></p><h2 id="CIKM">CIKM</h2><blockquote><p>All links : <a href="https://dl.acm.org/doi/proceedings/10.1145/3340531">https://dl.acm.org/doi/proceedings/10.1145/3340531</a></p></blockquote><table><thead><tr><th>Conference</th><th>Source</th><th>Deadline</th><th>Notification</th></tr></thead><tbody><tr><td>CIKM 2023</td><td></td><td></td><td></td></tr><tr><td>CIKM 2022</td><td></td><td>2022-05-29</td><td>2022-08-01</td></tr><tr><td>CIKM 2021</td><td><a href="https://www.cikm2021.org/accepted-papers">🔗</a></td><td></td><td></td></tr><tr><td>CIKM 2020</td><td><a href="https://www.cikm2020.org/index.html@p=1073.html">🔗</a></td><td></td><td></td></tr></tbody></table><h2 id="Reference">Reference</h2><ul><li><a href="https://github.com/Lionelsy/Conference-Accepted-Paper-List">Conference-Accepted-Paper-List</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Conferences-accepted-paper-lists&quot;&gt;Conferences&#39; accepted paper lists&lt;/h1&gt;
&lt;p&gt;❗ 建议使用 &lt;a href=&quot;https://dblp.uni-trier.de/&quot;&gt;dblp&lt;/a&gt; 和 &lt;</summary>
      
    
    
    
    <category term="Research" scheme="https://blueheart0621.github.io/categories/Research/"/>
    
    <category term="Sundry" scheme="https://blueheart0621.github.io/categories/Research/Sundry/"/>
    
    
    <category term="Research" scheme="https://blueheart0621.github.io/tags/Research/"/>
    
    <category term="Sundry" scheme="https://blueheart0621.github.io/tags/Sundry/"/>
    
  </entry>
  
  <entry>
    <title>Git配置指南</title>
    <link href="https://blueheart0621.github.io/2022/09/06/Technique/Git/Git%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <id>https://blueheart0621.github.io/2022/09/06/Technique/Git/Git%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</id>
    <published>2022-09-06T08:36:54.000Z</published>
    <updated>2022-11-18T07:07:02.050Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-配置说明">1. 配置说明</h2><p>Git 配置分为三种：<strong>系统配置</strong>、<strong>全局配置</strong>和<strong>局部配置</strong>。</p><table><thead><tr><th>配置模式</th><th>作用域</th><th>Linux 配置文件</th><th>Windows 配置文件</th></tr></thead><tbody><tr><td>系统配置</td><td>所有用户的所有仓库</td><td><code>/usr/local/git/etc/gitconfig</code></td><td><code>C:\Program Files\Git\etc\gitconfig</code></td></tr><tr><td>全局配置</td><td>当前用户的所有仓库</td><td><code>$HOME/.gitconfig</code></td><td><code>$HOME\.gitconfig</code> （PowerShell）<br /><code>%UserProfile%\.gitconfig</code> （CMD）</td></tr><tr><td>局部配置</td><td>当前用户的当前仓库</td><td><code>.git/config</code></td><td><code>.git\config</code></td></tr></tbody></table><p>Git 三种配置文件的读取顺序为：系统配置 -&gt; 全局配置 -&gt; 局部配置。当多个配置文件中存在相同配置项时，后面读取的配置会覆盖前面读取的配置。</p><h2 id="2-配置读写">2. 配置读写</h2><p>Git 的配置读写操作参数如下（命令前缀固定为 <code>git config</code>）：</p><table><thead><tr><th>配置</th><th>查看</th><th>编辑</th><th>添加</th><th>删除</th></tr></thead><tbody><tr><td>所有配置</td><td><code>--list</code></td><td>—</td><td>—</td><td>—</td></tr><tr><td>系统配置</td><td><code>--list --system</code></td><td><code>--system --edit</code></td><td><code>--system &lt;key&gt; &lt;value&gt;</code></td><td><code>--system --unset &lt;key&gt; &lt;value&gt;</code></td></tr><tr><td>全局配置</td><td><code>--list --global</code></td><td><code>--global --edit</code></td><td><code>--global &lt;key&gt; &lt;value&gt;</code></td><td><code>--global --unset &lt;key&gt; &lt;value&gt;</code></td></tr><tr><td>局部配置</td><td><code>--list --local</code></td><td><code>--edit</code><br /><code>--local --edit</code></td><td><code>&lt;key&gt; &lt;value&gt;</code><br /><code>--local &lt;key&gt; &lt;value&gt;</code></td><td><code>--unset &lt;key&gt; &lt;value&gt;</code><br /><code>--local --unset &lt;key&gt; &lt;value&gt;</code></td></tr></tbody></table><p>如果只想查看某一配置项，则可以使用 <code>git config &lt;key&gt; &lt;value&gt;</code> 来查看。</p><h2 id="3-常用配置">3. 常用配置</h2><h3 id="3-1-初始配置">3.1 初始配置</h3><p>当在系统上刚开始使用 Git 时，一般都需要配置以下基本信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name &lt;yourname&gt;<span class="hljs-comment"># 设置 commit 的用户名</span><br>git config --global user.email &lt;youremail&gt;<span class="hljs-comment"># 设置 commit 的用户邮箱</span><br></code></pre></td></tr></table></figure><p>其它一些可选的基本信息也可以考虑进行配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global core.editor vim<span class="hljs-comment"># 设置 Git 使用的默认编辑器</span><br>git config --global init.defaultBranch main<span class="hljs-comment"># 设置 Git 在初始仓库时的默认主分支</span><br></code></pre></td></tr></table></figure><h3 id="3-2-长路径">3.2 长路径</h3><p>当在 Windows 系统上 <code>clone</code> 或者 <code>pull</code> 时，如果出现报错信息：<code>error: unable to create xxx: Filename too long</code>，则说明仓库中存在路径过长的文件，本质是 Windows 文件系统的问题，详细说明可参见<a href="/2022/01/13/Technique/Windows/Windows10%E4%B8%8B%E8%B7%AF%E5%BE%84%E5%90%8D%E7%A7%B0%E9%99%90%E5%88%B6">Windows10下路径名称限制</a>。此时就需要启用长路径选项来解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global core.longpaths <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><blockquote><p>Git 本身对文件路径总长的限制是 4096，但在 Windows 系统上，Git 是用 msys 编译的，msys 使用的是旧版本的 Windows API，其对文件路径总长限制是 260。</p></blockquote><h3 id="3-3-文件模式">3.3 文件模式</h3><p>不同文件系统对于文件模式的设置不同，从而导致不同文件系统间同步仓库时，有可能会出现文件模式的改变。比如 *unix 文件系统上文件有 <code>st_mode</code> 结构，其使用 3 bits 来表示文件的模式（可读/写/执行等）；但在 Windows 的文件系统中，文件则没有类似对应于 *unix 文件系统的 executable bit，因此当 <code>clone</code> 或 <code>pull</code> 到 Windows 文件系统中时，Git 会给文件添加假的 executable bit。</p><p>当在 Windows 系统上使用 Git 出现警告信息：<code>old mode 100755 =&gt; new mode 100644</code>，则说明文件模式发生了改变（主要是 <code>st_mode</code> 位发生了变更，<code>755</code>=<code>rwxr-xr-x</code>，<code>644</code>=<code>rw-r--r--</code>）。可以禁用 Git 的文件模式，告诉 Git 直接忽略当前系统下的 executable bit 的任何变更：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global core.filemode <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h3 id="3-4-换行符替换">3.4 换行符替换</h3><p>不同系统下的换行符不同，比如 Linux 和 Mac 是 <code>LF</code>，Windows 是 <code>CRLF</code>（早期的 Mac 是 <code>CR</code>）。因此，当使用 Git 在不同系统上同步仓库时，需要将文件中的换行符进行替换，因而会出现警告信息：<code>warning: LF will be replaced by CRLF in xxx</code>。</p><ul><li><p>如果你只在相同系统上使用 Git 来同步项目，可以直接将换行符替换功能关闭，则 Git 不会对文件中的换行符做出改变，而是按原样压缩存入仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global core.autocrlf <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure></li><li><p>如果你在多个不同系统之间使用 Git 来同步项目，则可以分别针对不同系统设置换行符替换功能：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global core.autocrlf <span class="hljs-literal">true</span><span class="hljs-comment"># Windows 系统</span><br>git config --global core.autocrlf input<span class="hljs-comment"># Linux 和 Mac 系统</span><br></code></pre></td></tr></table></figure><p>前一条是告诉 Git 在 Windows 系统上，自动在文件系统和仓库间自动进行 <code>LF</code> 和 <code>CRLF</code> 的替换（双向转换）；后一条则是告诉 Git 在 Linux 和 Mac 系统上，如果发现仓库中存储的文件使用的是 <code>CRLF</code> 换行符，则自动转换成 <code>LF</code> 换行符（只是单向转换）。</p></li></ul><h2 id="附录">附录</h2><ul><li><a href="https://ihatetomatoes.net/git-config-tutorial/">Git Config Tutorial</a></li><li><a href="https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup">Getting Started - First-Time Git Setup</a></li><li><a href="https://stackoverflow.com/questions/22575662/filename-too-long-in-git-for-windows">Filename too long in Git for Windows</a></li><li><a href="https://stackoverflow.com/questions/69339954/what-are-the-consequences-of-git-config-core-filemode-false">What are the consequences of git config core.filemode false?</a></li><li><a href="https://stackoverflow.com/questions/5834014/lf-will-be-replaced-by-crlf-in-git-what-is-that-and-is-it-important">LF will be replaced by CRLF in git - What is that and is it important?</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-配置说明&quot;&gt;1. 配置说明&lt;/h2&gt;
&lt;p&gt;Git 配置分为三种：&lt;strong&gt;系统配置&lt;/strong&gt;、&lt;strong&gt;全局配置&lt;/strong&gt;和&lt;strong&gt;局部配置&lt;/strong&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;配</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="Git" scheme="https://blueheart0621.github.io/categories/Technique/Git/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="Git" scheme="https://blueheart0621.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Windows10下配置CMake+Make+Cpp环境</title>
    <link href="https://blueheart0621.github.io/2022/08/28/Technique/Windows/Windows10%E4%B8%8B%E9%85%8D%E7%BD%AECMake+Make+Cpp%E7%8E%AF%E5%A2%83/"/>
    <id>https://blueheart0621.github.io/2022/08/28/Technique/Windows/Windows10%E4%B8%8B%E9%85%8D%E7%BD%AECMake+Make+Cpp%E7%8E%AF%E5%A2%83/</id>
    <published>2022-08-28T12:25:01.000Z</published>
    <updated>2022-11-18T07:07:02.092Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介">1. 简介</h2><p>在 Linux 上使用 CMake+Make+Cpp 环境简直不要太轻松，大多数 Linux 发行版都自带 Make 和 GCC，因此只需用命令安装一下 CMake 后即可使用。但在 Windows 10 上却需要好好配置一番才能使用……</p><h2 id="2-配置-MinGW-w64">2. 配置 MinGW-w64</h2><p>MingGW-w64 项目旨在 Windows 系统上支持 GCC 编译器，其为 Windows 提供了使用 GCC 编译器的功能。为了更好地在 Windows 系统上使用 GCC 编译器，出现了一些工具合集软件，它们整合了更完备的 GCC 编译器环境供 Windows 系统下使用。比如 <a href="https://cygwin.com/">Cygwin</a> 和 <a href="https://www.msys2.org/">MSYS2</a>，这里我个人推荐安装 MSYS2 包。</p><p>安装好 MSYS2 软件包后，在 Windows 10 的菜单栏中找到 MSYS2，然后打开 <code>MSYS2 MSYS</code> 程序，其提供了类 Arch 的终端环境（Archer 狂喜），然后安装一系列的 GCC 编译链工具：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs llvm">pacman -S mingw-w<span class="hljs-number">64</span>-<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>-gcc<br>pacman -S mingw-w<span class="hljs-number">64</span>-<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>-cmake mingw-w<span class="hljs-number">64</span>-<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>-extra-cmake-modules<br>pacman -S mingw-w<span class="hljs-number">64</span>-<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>-make<br>pacman -S mingw-w<span class="hljs-number">64</span>-<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>-gdb<br>pacman -S mingw-w<span class="hljs-number">64</span>-<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>-toolchain<br></code></pre></td></tr></table></figure><p>安装完这些编译链工具后，找到 MSYS2 的安装路径（我这里是 <code>C:\msys64</code>），将 <code>C:\msys64\mingw64\bin</code> 加入到系统变量 <code>Path</code> 中：</p><ul><li><p>「此电脑右键」-&gt;「属性」-&gt;「高级系统设置」-&gt;「环境变量」，然后选择 <code>Path</code> 变量进行「编辑」，加入 <code>C:\msys64\mingw64\bin</code> 路径。</p><blockquote><p>按照上述步骤安装完后，<code>C:\msys64\mingw64\bin</code> 路径下应当有一系列的工具，如 <code>gcc.exe</code>、<code>g++.exe</code>、<code>cmake.exe</code> 和 <code>mingw32-make.exe</code> 等。</p></blockquote></li></ul><p>此外，为了使用方便，将 <code>C:\msys64\mingw64\bin</code> 目录下的 <code>mingw32-make.exe</code> 复制一份并重命名为 <code>make.exe</code>。</p><h2 id="3-使用-CMake-Make">3. 使用 CMake + Make</h2><p>对于创建的 Cpp 项目，在其中写好 <code>CMakeLists.txt</code> 文件后，可以在 PowerShell 中按如下步骤进行编译：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">mkdir build<br><span class="hljs-built_in">cd</span> build<br>cmake .. <span class="hljs-literal">-G</span> <span class="hljs-string">&quot;MinGW Makefiles&quot;</span><span class="hljs-comment"># 此项参数一定要加，不然默认使用 Windows 自带的 nmake 而不是 MinGW 的 make 工具</span><br>make<span class="hljs-comment"># 如果没有上述的复制重命名操作，则需使用 mingw32-make 命令</span><br></code></pre></td></tr></table></figure><h2 id="附录">附录</h2><ul><li><a href="https://www.mingw-w64.org/">MinGW-w64</a></li><li><a href="https://gcc.gnu.org/install/binaries.html">Installing GCC: Binaries</a></li><li><a href="https://zhuanlan.zhihu.com/p/497839595">CMake on Windows Tutorial 1</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;
&lt;p&gt;在 Linux 上使用 CMake+Make+Cpp 环境简直不要太轻松，大多数 Linux 发行版都自带 Make 和 GCC，因此只需用命令安装一下 CMake 后即可使用。但在 Windows 10 上却需要好好配置一</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/categories/Technique/Windows/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Windows10配置PowerShell</title>
    <link href="https://blueheart0621.github.io/2022/08/28/Technique/Windows/PowerShell/Windows10%E9%85%8D%E7%BD%AEPowerShell/"/>
    <id>https://blueheart0621.github.io/2022/08/28/Technique/Windows/PowerShell/Windows10%E9%85%8D%E7%BD%AEPowerShell/</id>
    <published>2022-08-28T10:39:01.000Z</published>
    <updated>2022-11-18T07:07:02.092Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介">1. 简介</h2><p>Windows 系统一个令人诟病的地方在于，它的 Shell 终端太拉胯了。且不说原先的 CMD，难用且难看，就连新加入的 PowerShell 也是一如既往的难看。 对于长期使用惯了 Zsh 的用户来说，切换到 Windows 10 系统上的 CMD 和 PowerShell 简直就是噩梦！</p><p>不过 PowerShell 一直在发展更新，目前最新版是 PowerShell 7（Windows 10 自带的是版本 5.1）。而且它也出了跨平台版本，使用也和 Linux Shell 有很多兼容。只要将 PowerShell 合理配置一下，就能达到非常好用的效果。</p><blockquote><p>个人推荐 Windows Terminal + PowerShell + oh-my-posh + posh-git。</p></blockquote><h2 id="2-安装">2. 安装</h2><h3 id="2-1-Windows-Terminal">2.1 Windows Terminal</h3><p>Windows Terminal（WT）总算是微软拿得出手的一款开源终端应用了，其可以在 MicroSoft Store 里免费下载到。WT 可以用于 CMD、PowerShell 和 WSL 等终端解释器，WT 的开源仓库：<a href="https://github.com/microsoft/terminal">https://github.com/microsoft/terminal</a>。</p><h3 id="2-2-PowerShell-7">2.2 PowerShell 7</h3><p>Windows 10 自带的 PowerShell 太旧了，缺少很多功能。最新版本的 PowerShell 可以到其开源仓库中下载：<a href="https://github.com/PowerShell/PowerShell">https://github.com/PowerShell/PowerShell</a>。</p><h3 id="2-3-oh-my-posh-posh-git">2.3 oh-my-posh &amp; posh-git</h3><p>有了 WT + PowerShell 后，我们还需要针对 PowerShell 的插件框架，类似于 Zsh 的 oh-my-zsh 插件框架。oh-my-posh 为 PowerShell 提供了各种美化主题，而 posh-git 则为 PowerShell 则为 PowerShell 提供了 Git 状态显示和命令补全等功能。</p><blockquote><p>遗憾的是，oh-my-posh 的作者团队已经放弃 oh-my-posh 对 PowerShell 的支持……（oh-my-posh 不应当首先支持 PowerShell 再去考虑其它 Shell 吗，我不理解……</p></blockquote><p>安装好 PowerShell 7 后，<code>Win + R</code> 打开输入 <code>wt</code> 启动 Windows Terminal，然后「右键上边栏」-&gt;「设置」-&gt;「启动」-&gt;「默认配置文件」，设置为 PowerShell 7，即设置 WT 默认启用的是 PowerShell 7 。然后在 WT 中新建打开 PowerShell 7，安装 oh-my-posh 和 posh-git 模块：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Install-Module</span> posh<span class="hljs-literal">-git</span> <span class="hljs-literal">-Scope</span> CurrentUser <span class="hljs-comment"># posh-git</span><br><span class="hljs-built_in">Install-Module</span> <span class="hljs-built_in">oh</span><span class="hljs-literal">-my-posh</span> <span class="hljs-literal">-Scope</span> CurrentUser <span class="hljs-literal">-RequiredVersion</span> <span class="hljs-number">2.0</span>.<span class="hljs-number">496</span> <span class="hljs-comment"># oh-my-posh</span><br></code></pre></td></tr></table></figure><blockquote><p>参考 <a href="https://www.zhihu.com/column/hez2010">hez2010の编程日常</a> 博主的说明：oh-my-posh 建议用 2.x 版本，2.x 版本是 PowerShell 写的，但是 3.0 开始该插件换成用 Golang 实现了，不仅体积大了十几 mb，样式还变得更难看，速度也更慢了。</p></blockquote><ul><li>oh-my-posh 的开源仓库：<a href="https://github.com/JanDeDobbeleer/oh-my-posh">https://github.com/JanDeDobbeleer/oh-my-posh</a></li><li>posh-git 的开源仓库：<a href="https://github.com/dahlbyk/posh-git">https://github.com/dahlbyk/posh-git</a></li></ul><h2 id="3-配置-PowerShell">3. 配置 PowerShell</h2><p>编辑 PowerShell 的配置文件 <code>$Profile</code>：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">notepad.exe <span class="hljs-variable">$Profile</span><br></code></pre></td></tr></table></figure><p>然后添加以下内容到配置文件中：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Import-Module</span> posh<span class="hljs-literal">-git</span>                                                  <span class="hljs-comment"># 引入 posh-git</span><br><span class="hljs-built_in">Import-Module</span> <span class="hljs-built_in">oh</span><span class="hljs-literal">-my-posh</span>                                                <span class="hljs-comment"># 引入 oh-my-posh</span><br><br><span class="hljs-built_in">Set-Theme</span> Paradox                                                       <span class="hljs-comment"># 设置主题为 Paradox</span><br><br><span class="hljs-built_in">Set-PSReadLineOption</span> <span class="hljs-literal">-PredictionSource</span> <span class="hljs-built_in">History</span>                          <span class="hljs-comment"># 设置预测文本来源为历史记录</span><br><span class="hljs-built_in">Set-PSReadlineKeyHandler</span> <span class="hljs-literal">-Key</span> Tab <span class="hljs-literal">-Function</span> Complete                    <span class="hljs-comment"># 设置 Tab 键补全</span><br><span class="hljs-built_in">Set-PSReadLineKeyHandler</span> <span class="hljs-literal">-Key</span> <span class="hljs-string">&quot;Ctrl+d&quot;</span> <span class="hljs-literal">-Function</span> MenuComplete           <span class="hljs-comment"># 设置 Ctrl+d 为菜单补全和 Intellisense</span><br><span class="hljs-built_in">Set-PSReadLineKeyHandler</span> <span class="hljs-literal">-Key</span> <span class="hljs-string">&quot;Ctrl+z&quot;</span> <span class="hljs-literal">-Function</span> Undo                   <span class="hljs-comment"># 设置 Ctrl+z 为撤销</span><br><span class="hljs-built_in">Set-PSReadLineKeyHandler</span> <span class="hljs-literal">-Key</span> <span class="hljs-string">&quot;Ctrl+a&quot;</span> <span class="hljs-literal">-Function</span> BeginningOfLine        <span class="hljs-comment"># 设置 Ctrl+a 为光标到行首</span><br><br><span class="hljs-built_in">Set-PSReadLineKeyHandler</span> <span class="hljs-literal">-Key</span> UpArrow <span class="hljs-literal">-ScriptBlock</span> &#123;<br>    [<span class="hljs-type">Microsoft.PowerShell.PSConsoleReadLine</span>]::HistorySearchBackward()   <span class="hljs-comment"># 设置向上键为后向搜索历史记录</span><br>    [<span class="hljs-type">Microsoft.PowerShell.PSConsoleReadLine</span>]::EndOfLine()               <span class="hljs-comment"># 设置后向搜索历史记录时光标在行尾</span><br>&#125;<br><span class="hljs-built_in">Set-PSReadLineKeyHandler</span> <span class="hljs-literal">-Key</span> DownArrow <span class="hljs-literal">-ScriptBlock</span> &#123;<br>    [<span class="hljs-type">Microsoft.PowerShell.PSConsoleReadLine</span>]::HistorySearchForward()    <span class="hljs-comment"># 设置向下键为前向搜索历史纪录</span><br>    [<span class="hljs-type">Microsoft.PowerShell.PSConsoleReadLine</span>]::EndOfLine()               <span class="hljs-comment"># 设置前向搜索历史记录时光标在行尾</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-配置字体">4. 配置字体</h2><p>按装上述步骤配置完在 WT 打开 PowerShell 后看起来仍然很丑，主要是字体和主题图标不兼容的问题。因此需要安装一些适合终端的字体，比如 <a href="https://github.com/microsoft/cascadia-code/releases">Cascadia PL</a>。或者到 <a href="https://www.nerdfonts.com/#home">NerdFonts</a> 上选择一款自己喜欢的字体，下载下来解压右键为安装即可。</p><p>安装完字体后，然后「右键上边栏」-&gt;「设置」-&gt;「PowerShell 7」-&gt;「外观」-&gt;「字体」，修改为你想用的字体即可。</p><h2 id="附录">附录</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/137251716">给 PowerShell 带来 zsh 的体验</a></li><li><a href="https://blog.walterlv.com/post/beautify-powershell-like-zsh.html">将美化进行到底，使用 Oh My Posh 把 PowerShell 做成 oh-my-zsh 的样子</a></li><li><a href="https://ohmyposh.dev/docs">Oh My Posh - Docs</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;
&lt;p&gt;Windows 系统一个令人诟病的地方在于，它的 Shell 终端太拉胯了。且不说原先的 CMD，难用且难看，就连新加入的 PowerShell 也是一如既往的难看。 对于长期使用惯了 Zsh 的用户来说，切换到 Windo</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/categories/Technique/Windows/"/>
    
    <category term="PowerShell" scheme="https://blueheart0621.github.io/categories/Technique/Windows/PowerShell/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/tags/Windows/"/>
    
    <category term="PowerShell" scheme="https://blueheart0621.github.io/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>课程计划</title>
    <link href="https://blueheart0621.github.io/2022/07/26/Life/%E8%AF%BE%E7%A8%8B/%E8%AF%BE%E7%A8%8B%E8%AE%A1%E5%88%92/"/>
    <id>https://blueheart0621.github.io/2022/07/26/Life/%E8%AF%BE%E7%A8%8B/%E8%AF%BE%E7%A8%8B%E8%AE%A1%E5%88%92/</id>
    <published>2022-07-26T03:37:05.000Z</published>
    <updated>2022-11-18T07:07:01.935Z</updated>
    
    <content type="html"><![CDATA[<h2 id="技术类">技术类</h2><ul><li>[ ] <a href="http://videolectures.net/deeplearning2017_montreal/">DLSS &amp; RLSS 2017 - Montreal</a></li><li>[ ] <a href="https://www.youtube.com/watch?v=z95ZYgPgXOY&amp;list=PLJV_el3uVTsODxQFgzMzPLa16h6B8kWM">Deep Reinforcement Learning, 2018</a></li><li>[ ] <a href="https://www.youtube.com/watch?v=DQNNMiAP5lw&amp;list=PLJV_el3uVTsMq6JEFPW35BCiOQTsoqwNw">Generative Adversarial Network (GAN), 2018</a></li></ul><h2 id="哲学类">哲学类</h2><ul><li>[x] <a href="https://www.bilibili.com/video/BV16t411p7n8">西方哲学史 - 张志伟</a></li></ul><h3 id="数学类">数学类</h3><ul><li>[ ] [常微分方程]</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;技术类&quot;&gt;技术类&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://videolectures.net/deeplearning2017_montreal/&quot;&gt;DLSS &amp;amp; RLSS 2017 - Montreal&lt;/a&gt;&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    <category term="Life" scheme="https://blueheart0621.github.io/categories/Life/"/>
    
    <category term="课程" scheme="https://blueheart0621.github.io/categories/Life/%E8%AF%BE%E7%A8%8B/"/>
    
    
    <category term="Life" scheme="https://blueheart0621.github.io/tags/Life/"/>
    
    <category term="课程" scheme="https://blueheart0621.github.io/tags/%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Windows下flameshot配置</title>
    <link href="https://blueheart0621.github.io/2022/07/24/Technique/Windows/Windows%E4%B8%8Bflameshot%E9%85%8D%E7%BD%AE/"/>
    <id>https://blueheart0621.github.io/2022/07/24/Technique/Windows/Windows%E4%B8%8Bflameshot%E9%85%8D%E7%BD%AE/</id>
    <published>2022-07-24T07:56:51.000Z</published>
    <updated>2022-11-18T07:07:02.091Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介">1. 简介</h2><p><a href="https://flameshot.org/">Flameshot</a> 是一款非常好用的屏幕截图工具，而且还是一款开源的跨平台应用。个人因在 Linux 上习惯了 Flameshot，故迁回 Windows 系统后也继续使用这款截图工具。</p><h2 id="2-开机自启">2. 开机自启</h2><p>打开 Flameshot，在菜单栏找到其图标，「右键」-&gt;「配置」-&gt;「常规」，勾选「开机时启动」。</p><h2 id="3-自定义截图快捷键">3. 自定义截图快捷键</h2><p>Flameshot 内置了很多快捷键（「右键」-&gt;「配置」-&gt;「快捷键」），而且大部分是可以自定义的。但恰恰最基本的「捕获屏幕」功能默认快捷键为 <code>Print Screen</code>，且不能修改！这让习惯 <code>Ctrl + Alt + A</code> 截图的我无所适从。</p><blockquote><p>Flameshot 的「捕获屏幕」功能在 Linux 系统上可以正常修改。</p></blockquote><p>好在 Windows 系统有强大的第三方软件生态支持。我们可以使用 <a href="https://www.autohotkey.com/">AutoHotKey</a> 软件来实现自定义 Flameshot 「捕获屏幕」快捷键的功能。</p><ol><li><p>安装 <a href="https://www.autohotkey.com/">AutoHotKey</a> 软件；</p></li><li><p>新建 <code>flameshot.ahk</code> 文件，在其内部写入以下脚本：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-comment">;; flameshot remap print screen</span><br>SendMode Input  <span class="hljs-comment">;</span><br><span class="hljs-built_in">SetWorkingDir %</span><span class="hljs-built_in">A_ScriptDir</span>%  <span class="hljs-comment">;</span><br><span class="hljs-title">^!a::</span>Send &#123;PrintScreen&#125;<br><span class="hljs-keyword">return</span><br></code></pre></td></tr></table></figure><p>其中，<code>Send PrintScreen</code> 则是表示发送 <code>Print Screen</code> 按键，<code>^!a</code> 便是表示快捷键 <code>Ctrl + Alt + A</code>，若要设定其它快捷键可以参考 <a href="https://www.autohotkey.com/docs/AutoHotkey.htm">AutoHotKey 文档</a>。</p></li><li><p>最后双击 <code>flameshot.ahk</code> 文件即可启用该快捷键；</p></li><li><p>为了每次开机都能使用该快捷键而不用每次都双击启动，可以把 <code>flameshot.ahk</code> 文件放入 Windows 的开机启动文件夹 <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code> 中。</p><blockquote><p>开机自启动文件夹也可以通过 <code>Win + R</code> 调出运行窗口后输入 <code>shell:common startup</code> 打开。</p></blockquote></li></ol><h2 id="附录">附录</h2><ul><li><a href="https://github.com/flameshot-org/flameshot/issues/1341">Remap print-screen activation key on Windows</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://flameshot.org/&quot;&gt;Flameshot&lt;/a&gt; 是一款非常好用的屏幕截图工具，而且还是一款开源的跨平台应用。个人因在 Linux 上习惯了 Flameshot，故迁回 Windo</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/categories/Technique/Windows/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Windows快捷键速查</title>
    <link href="https://blueheart0621.github.io/2022/07/24/Technique/Windows/Windows%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%80%9F%E6%9F%A5/"/>
    <id>https://blueheart0621.github.io/2022/07/24/Technique/Windows/Windows%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%80%9F%E6%9F%A5/</id>
    <published>2022-07-24T07:06:46.000Z</published>
    <updated>2022-11-18T07:07:02.091Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-常用">1. 常用</h2><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>Ctrl + X</td><td>剪切选定项。</td></tr><tr><td>Ctrl + C（或 Ctrl + Insert）</td><td>复制选定项。</td></tr><tr><td>Ctrl + V（或 Shift + Insert）</td><td>粘贴选定项。</td></tr><tr><td>Ctrl + Z</td><td>撤消操作。</td></tr><tr><td>Alt + Tab</td><td>在打开的应用之间切换。</td></tr><tr><td>Alt + F4</td><td>关闭活动项，或者退出活动应用。</td></tr><tr><td>Windows 徽标键 + L</td><td>锁定你的电脑。</td></tr><tr><td>Windows 徽标键 + D</td><td>显示和隐藏桌面。</td></tr><tr><td>F2</td><td>重命名所选项目。</td></tr><tr><td>F3</td><td>在文件资源管理器中搜索文件或文件夹。</td></tr><tr><td>F4</td><td>在文件资源管理器中显示地址栏列表。</td></tr><tr><td>F5</td><td>刷新活动窗口。</td></tr><tr><td>F6</td><td>循环浏览窗口中或桌面上的屏幕元素。</td></tr><tr><td>F10</td><td>激活活动应用中的菜单栏。</td></tr><tr><td>Alt + F8</td><td>在登录屏幕上显示你的密码。</td></tr><tr><td>Alt + Esc</td><td>按项目打开顺序循环浏览。</td></tr><tr><td>Alt + 带下划线的字母</td><td>执行该字母相关的命令。</td></tr><tr><td>Alt + Enter</td><td>显示所选项目的属性。</td></tr><tr><td>Alt + 空格键</td><td>打开活动窗口的快捷菜单。</td></tr><tr><td>Alt + 向左键</td><td>返回。</td></tr><tr><td>Alt + 向右键</td><td>前进。</td></tr><tr><td>Alt + Page Up</td><td>向上移动一个屏幕。</td></tr><tr><td>Alt + Page Down</td><td>向下移动一个屏幕。</td></tr><tr><td>Ctrl + F4</td><td>关闭活动文档</td></tr><tr><td>Ctrl + A</td><td>选择文档或窗口中的所有项目。</td></tr><tr><td>Ctrl + D（或 Delete）</td><td>删除选定项，将其移至回收站。</td></tr><tr><td>Ctrl + R（或 F5）</td><td>刷新活动窗口。</td></tr><tr><td>Ctrl + Y</td><td>恢复操作。</td></tr><tr><td>Ctrl + 向右键</td><td>将光标移动到下一个字词的起始处。</td></tr><tr><td>Ctrl + 向左键</td><td>将光标移动到上一个字词的起始处。</td></tr><tr><td>Ctrl + 向下键</td><td>将光标移动到下一段落的起始处。</td></tr><tr><td>Ctrl + 向上键</td><td>将光标移动到上一段落的起始处。</td></tr><tr><td>Ctrl + Alt + Tab</td><td>使用箭头键在所有打开的应用之间进行切换。</td></tr><tr><td>Alt + Shift + 箭头键</td><td>当组或磁贴的焦点放在“开始”菜单上时，可将其朝指定方向移动。</td></tr><tr><td>Ctrl + Shift + 箭头键</td><td>当磁贴的焦点放在“开始”菜单上时，将其移到另一个磁贴即可创建一个文件夹。</td></tr><tr><td>Ctrl + 箭头键</td><td>打开“开始”菜单后调整其大小。</td></tr><tr><td>Ctrl + 箭头键（移至某个项目）+ 空格键</td><td>选择窗口中或桌面上的多个单独项目。</td></tr><tr><td>Ctrl + Shift（及箭头键）</td><td>选择文本块。</td></tr><tr><td>Ctrl + Esc</td><td>打开“开始”菜单。</td></tr><tr><td>Ctrl + Shift + Esc</td><td>打开任务管理器。</td></tr><tr><td>Ctrl + Shift</td><td>如果多种键盘布局可用，则可切换键盘布局。</td></tr><tr><td>Ctrl + 空格键</td><td>打开或关闭中文输入法编辑器 (IME)。</td></tr><tr><td>Shift + F10</td><td>显示选定项的快捷菜单。</td></tr><tr><td>按 Shift 与任何箭头键</td><td>在窗口中或桌面上选择多个项目，或在文档中选择文本。</td></tr><tr><td>Shift + Delete</td><td>删除选定项，无需先移动到回收站。</td></tr><tr><td>向右键</td><td>打开右侧的下一个菜单，或打开子菜单。</td></tr><tr><td>向左键</td><td>打开左侧的下一个菜单，或关闭子菜单。</td></tr><tr><td>Esc</td><td>停止或离开当前任务。</td></tr><tr><td>PrtScn</td><td>捕获整个屏幕的屏幕截图并将其复制到剪贴板。</td></tr></tbody></table><h2 id="2-任务栏">2. 任务栏</h2><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>Shift + 单击任务栏按钮</td><td>打开应用或快速打开另一个应用实例。</td></tr><tr><td>Ctrl + Shift + 单击任务栏按钮</td><td>以管理员身份打开应用。</td></tr><tr><td>Shift + 右键单击任务栏按钮</td><td>显示应用的窗口菜单。</td></tr><tr><td>Shift + 右键单击分组任务栏按钮</td><td>显示组的窗口菜单。</td></tr><tr><td>Ctrl + 单击分组任务栏按钮</td><td>循环浏览组的窗口。</td></tr></tbody></table><h2 id="3-设置">3. 设置</h2><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>Windows 徽标键 + I</td><td>打开设置。</td></tr><tr><td>Backspace</td><td>返回到设置主页。</td></tr><tr><td>使用搜索框在任何页面上键入</td><td>搜索设置。</td></tr></tbody></table><h2 id="4-Windows-徽标键">4. Windows 徽标键</h2><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>Windows 徽标键</td><td>打开或关闭“开始”菜单。</td></tr><tr><td>Windows 徽标键 + A</td><td>打开操作中心。</td></tr><tr><td>Windows 徽标键 + B</td><td>将焦点设置到通知区域。</td></tr><tr><td>Windows 徽标键 + C</td><td>在侦听模式下打开 Cortana。</td></tr><tr><td>Windows 徽标键 + Shift + C</td><td>打开超级按钮菜单。</td></tr><tr><td>Windows 徽标键 + D</td><td>显示和隐藏桌面。</td></tr><tr><td>Windows 徽标键 + Alt + D</td><td>显示和隐藏桌面上的日期和时间。</td></tr><tr><td>Windows 徽标键 + E</td><td>打开文件资源管理器。</td></tr><tr><td>Windows 徽标键 + F</td><td>打开反馈中心并获取屏幕截图。</td></tr><tr><td>Windows 徽标键 + G</td><td>打开游戏栏</td></tr><tr><td>Windows 徽标键 + H</td><td>开始听写。</td></tr><tr><td>Windows 徽标键 + I</td><td>打开设置。</td></tr><tr><td>Windows 徽标键 + J</td><td>将焦点设置到可用的 Windows 提示。</td></tr><tr><td>Windows 徽标键 + K</td><td>打开“连接”快速操作.</td></tr><tr><td>Windows 徽标键 + L</td><td>锁定你的电脑或切换帐户。</td></tr><tr><td>Windows 徽标键 + M</td><td>最小化所有窗口。</td></tr><tr><td>Windows 徽标键 + O</td><td>锁定设备方向。</td></tr><tr><td>Windows 徽标键 + P</td><td>选择演示显示模式。</td></tr><tr><td>Windows 徽标键 + Ctrl + Q</td><td>打开快速助手。</td></tr><tr><td>Windows 徽标键 + R</td><td>打开“运行”对话框。</td></tr><tr><td>Windows 徽标键 + S</td><td>打开搜素。</td></tr><tr><td>Windows 徽标键 + Shift + S</td><td>获取部分屏幕的屏幕截图。</td></tr><tr><td>Windows 徽标键 + T</td><td>循环浏览任务栏上的应用。</td></tr><tr><td>Windows 徽标键 + U</td><td>打开轻松使用设置中心。</td></tr><tr><td>Windows 徽标键 + V</td><td>打开剪贴板。</td></tr><tr><td>Windows 徽标键 + Shift + V</td><td>循环浏览通知。</td></tr><tr><td>Windows 徽标键 + X</td><td>打开“快速链接”菜单。</td></tr><tr><td>Windows 徽标键 + Y</td><td>在 Windows Mixed Reality 与桌面之间切换输入。</td></tr><tr><td>Windows 徽标键 + Z</td><td>以全屏模式显示应用中可用的命令。</td></tr><tr><td>Windows 徽标键 + 句点 (.) 或分号 (😉</td><td>打开表情符号面板。</td></tr><tr><td>Windows 徽标键 + 逗号 (,)</td><td>临时速览桌面。</td></tr><tr><td>Windows 徽标键 + Pause</td><td>显示“系统属性”对话框。</td></tr><tr><td>Windows 徽标键 + Ctrl + F</td><td>搜索电脑（如果已连接到网络）。</td></tr><tr><td>Windows 徽标键 + Shift + M</td><td>还原桌面上的最小化窗口。</td></tr><tr><td>Windows 徽标键 + 数字</td><td>打开桌面，然后启动固定到任务栏的应用</td></tr><tr><td>Windows 徽标键 + Shift + 数字</td><td>打开桌面，然后启动固定到任务栏的应用新实例</td></tr><tr><td>Windows 徽标键 + Ctrl + 数字</td><td>打开桌面，然后切换至固定到任务栏的应用的最后活动窗口</td></tr><tr><td>Windows 徽标键 + Alt + 数字</td><td>打开桌面，然后打开固定到任务栏的应用的“跳转列表”</td></tr><tr><td>Windows 徽标键 + Ctrl + Shift + 数字</td><td>打开桌面，然后以管理员身份打开位于任务栏上指定位置的应用新实例。</td></tr><tr><td>Windows 徽标键 + Tab</td><td>打开任务视图。</td></tr><tr><td>Windows 徽标键 + 向上键</td><td>最大化窗口。</td></tr><tr><td>Windows 徽标键 + 向下键</td><td>删除屏幕上的当前应用并最小化桌面窗口。</td></tr><tr><td>Windows 徽标键 + 向左键</td><td>最大化屏幕左侧的应用或桌面窗口。</td></tr><tr><td>Windows 徽标键 + 向右键</td><td>最大化屏幕右侧的应用或桌面窗口。</td></tr><tr><td>Windows 徽标键 + Home</td><td>最小化活动桌面窗口之外的所有窗口</td></tr><tr><td>Windows 徽标键 + Shift + 向上键</td><td>将桌面窗口拉伸至屏幕顶部和底部。</td></tr><tr><td>Windows 徽标键 + Shift + 向下键</td><td>在垂直方向上还原/最小化活动桌面窗口，而宽度保持不变。</td></tr><tr><td>Windows 徽标键 + Shift + 向左键或向右键</td><td>将桌面上的应用或窗口从一台显示器移动至另一台显示器。</td></tr><tr><td>Windows 徽标键 + 空格键</td><td>切换输入语言和键盘布局。</td></tr><tr><td>Windows 徽标键 + Ctrl + 空格键</td><td>对之前选择的输入所做的更改。</td></tr><tr><td>Windows 徽标键 + Ctrl + Enter</td><td>打开“讲述人”。</td></tr><tr><td>Windows 徽标键 + 加号 (+)</td><td>打开“放大镜”。</td></tr><tr><td>Windows 徽标键 + 正斜杠 (/)</td><td>开始输入法复原流程。</td></tr><tr><td>Windows 徽标键 + Ctrl + V</td><td>打开肩式分接设备。</td></tr><tr><td>Windows 徽标键 + Ctrl + Shift + B</td><td>从空白屏幕或黑屏中唤醒</td></tr></tbody></table><h2 id="5-命令提示符">5. 命令提示符</h2><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>Ctrl + C（或 Ctrl + Insert）</td><td>复制选定文本。</td></tr><tr><td>Ctrl + V（或 Shift + Insert）</td><td>粘贴选定文本。</td></tr><tr><td>Ctrl + M</td><td>进入标记模式。</td></tr><tr><td>Alt + 所选择的键</td><td>开始在块模式下选择。</td></tr><tr><td>箭头键</td><td>按指定方向移动光标。</td></tr><tr><td>Page Up</td><td>将光标向上移动一个页面。</td></tr><tr><td>Page Down</td><td>将光标向下移动一个页面。</td></tr><tr><td>Ctrl + Home（标记模式）</td><td>将光标移动到缓冲区的起始处。</td></tr><tr><td>Ctrl + End（标记模式）</td><td>将光标移动到缓冲区的结尾处。</td></tr><tr><td>Ctrl + 向上键</td><td>在输出历史记录中上移一行。</td></tr><tr><td>Ctrl + 向下键</td><td>在输出历史记录中下移一行。</td></tr><tr><td>Ctrl + Home（历史记录导航）</td><td>如果命令行为空，则将视区移动到缓冲区顶部。否则，请删除命令行中光标左侧的所有字符。</td></tr><tr><td>Ctrl + End（历史记录导航）</td><td>如果命令行为空，则将视区移动到命令行。 否则，请删除命令行中光标右侧的所有字符。</td></tr></tbody></table><h2 id="6-对话框">6. 对话框</h2><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>F4</td><td>显示活动列表中的项目。</td></tr><tr><td>Ctrl + Tab</td><td>在选项卡中向前移动。</td></tr><tr><td>Ctrl + Shift + Tab</td><td>在选项卡中向后移动。</td></tr><tr><td>Ctrl + 数字（数字 1–9）</td><td>移动到第 n 个选项卡。</td></tr><tr><td>Tab</td><td>在选项中向前移动。</td></tr><tr><td>Shift + Tab</td><td>在选项中向后移动。</td></tr><tr><td>Alt + 带下划线的字母</td><td>执行可与该字母结合使用的命令。</td></tr><tr><td>空格键</td><td>如果活动选项为复选框，则选择或清除复选框。</td></tr><tr><td>Backspace</td><td>如果在“另存为”或“打开”对话框中选择文件夹，则打开上一级别的文件夹。</td></tr><tr><td>箭头键</td><td>如果活动选项是一组选项按钮，请选择一个按钮。</td></tr></tbody></table><h2 id="7-文件资源管理器">7. 文件资源管理器</h2><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>Alt + D</td><td>选择地址栏。</td></tr><tr><td>Ctrl + E</td><td>选择搜索框。</td></tr><tr><td>Ctrl + F</td><td>选择搜索框。</td></tr><tr><td>Ctrl + N</td><td>打开新窗口。</td></tr><tr><td>Ctrl + W</td><td>关闭活动窗口。</td></tr><tr><td>Ctrl + 鼠标滚轮</td><td>更改文件和文件夹图标的大小和外观。</td></tr><tr><td>Ctrl + Shift + E</td><td>显示选定文件夹上的所有文件夹。</td></tr><tr><td>Ctrl + Shift + N</td><td>创建新文件夹。</td></tr><tr><td>Num Lock + 星号 (*)</td><td>显示选定文件夹下的所有子文件夹。</td></tr><tr><td>Num Lock + 加号 (+)</td><td>显示选定文件夹中的内容。</td></tr><tr><td>Num Lock + 减号 (-)</td><td>折叠选定文件夹。</td></tr><tr><td>Alt + P</td><td>显示预览面板。</td></tr><tr><td>Alt + Enter</td><td>打开选定项的“属性”对话框。</td></tr><tr><td>Alt + 向右键</td><td>查看下一个文件夹。</td></tr><tr><td>Alt + 向上键</td><td>查看该文件夹所在的文件夹。</td></tr><tr><td>Alt + 向左键</td><td>查看上一个文件夹。</td></tr><tr><td>Backspace</td><td>查看上一个文件夹。</td></tr><tr><td>向右键</td><td>显示当前选择内容（如果已折叠），或选择第一个子文件夹。</td></tr><tr><td>向左键</td><td>折叠当前选择内容（如果已展开），或选择该文件夹所在的文件夹。</td></tr><tr><td>End</td><td>显示活动窗口底部。</td></tr><tr><td>Home</td><td>显示活动窗口顶部。</td></tr><tr><td>F11</td><td>最大化或最小化活动窗口。</td></tr></tbody></table><h2 id="8-虚拟桌面">8. 虚拟桌面</h2><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>Windows 徽标键 + Tab</td><td>打开任务视图。</td></tr><tr><td>Windows 徽标键 + Ctrl + D</td><td>添加虚拟桌面。</td></tr><tr><td>Windows 徽标键 + Ctrl + 向右键</td><td>在你于右侧创建的虚拟桌面之间切换。</td></tr><tr><td>Windows 徽标键 + Ctrl + 向左键</td><td>在你于左侧创建的虚拟桌面之间切换。</td></tr><tr><td>Windows 徽标键 + Ctrl + F4</td><td>关闭你正在使用的虚拟桌面。</td></tr></tbody></table><h2 id="附录">附录</h2><ul><li><a href="https://support.microsoft.com/zh-cn/windows/windows-%E7%9A%84%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F-dcc61a57-8ff0-cffe-9796-cb9706c75eec">Windows 的键盘快捷方式</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-常用&quot;&gt;1. 常用&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + X&lt;/td&gt;
&lt;td&gt;剪切选定项。&lt;/td&gt;
&lt;/tr&gt;
&lt;</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/categories/Technique/Windows/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Windows自定义快捷键</title>
    <link href="https://blueheart0621.github.io/2022/07/24/Technique/Windows/Windows%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://blueheart0621.github.io/2022/07/24/Technique/Windows/Windows%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2022-07-24T03:55:03.000Z</published>
    <updated>2022-11-18T07:07:02.092Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介">1. 简介</h2><p>Windows 提供了许多<a href="/2022/07/24/Technique/Windows/Windows%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%80%9F%E6%9F%A5">内置的全局快捷键</a>，但却没有提供一种统一的自定义快捷键方法，一些内置的快捷键（比如复制、粘贴等），用户也是无法直接更改的。好在 Windows 的生态比较好，已经有一些第三方软件支持统一的自定义快捷键。</p><h2 id="2-启动程序">2. 启动程序</h2><p>Windows 支持使用快捷键来启动程序，具体做法如下：</p><ol><li>鼠标右键程序快捷方式（如没有则先创建），点击「属性」栏；</li><li>在「快捷方式」选项卡中找到「快捷键」选项；</li><li>将鼠标定位到输入框中，按下自定义的快捷键即可；如果想去除快捷键，按下回退键即可。</li></ol><h2 id="3-切换输入法">3. 切换输入法</h2><p>Windows 支持使用数字快捷键来快速切换不同的输入法，具体做法如下：</p><ol><li>打开「设置」-&gt;「时间和语言」-&gt;「语言」-&gt;「键盘」-&gt;「输入语言热键」；</li><li>找到自己想要快速切换的输入法，鼠标定位后点击「更改按键顺序」；</li><li>勾选「启用按键顺序」，然后设置对应的数字快捷键即可。</li></ol><h2 id="4-第三方软件">4. 第三方软件</h2><h3 id="4-1-AutoHotkey">4.1 AutoHotkey</h3><p><a href="https://www.autohotkey.com/">AutoHotKey</a> 是一款强大的开源 Windows 快捷键自定义软件，通过编写对应的 <code>.ahk</code> 脚本文件，用户可以自定义各种功能的快捷键。将对应的 <code>.ahk</code> 脚本文件放入开机自启动文件夹 <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code> 中，即可实现快捷键开机生效。</p><blockquote><p>开机自启动文件夹也可以通过 <code>Win + R</code> 调出运行窗口后输入 <code>shell:common startup</code> 打开。</p></blockquote><ul><li><a href="https://www.autohotkey.com/">AutoHotKey 官网</a></li><li><a href="https://www.autohotkey.com/docs/AutoHotkey.htm">AutoHotKey 文档</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;
&lt;p&gt;Windows 提供了许多&lt;a href=&quot;/2022/07/24/Technique/Windows/Windows%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%80%9F%E6%9F%A5&quot;&gt;内置的全局快</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/categories/Technique/Windows/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="Windows" scheme="https://blueheart0621.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>论文十问</title>
    <link href="https://blueheart0621.github.io/2022/07/17/Research/PaperReading/%E8%AE%BA%E6%96%87%E5%8D%81%E9%97%AE/"/>
    <id>https://blueheart0621.github.io/2022/07/17/Research/PaperReading/%E8%AE%BA%E6%96%87%E5%8D%81%E9%97%AE/</id>
    <published>2022-07-17T08:34:36.000Z</published>
    <updated>2022-11-18T07:07:02.113Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介">1. 简介</h2><p><strong>论文十问</strong>由沈向洋博士提出，他鼓励大家带着这十个问题去阅读论文，用有用的信息构建认知模型。个人也觉得论文十问对阅读论文非常有帮助，故此记下，同时记录一些经典的论文十答作为典范参考。</p><h2 id="2-内容">2. 内容</h2><div class="note note-no-icon">            <p><strong>Q1</strong>：论文试图解决什么问题？</p>          </div><div class="note note-blue no-icon">            <p><strong>Q2</strong>：这是否是一个新的问题？</p>          </div><div class="note note-pink no-icon">            <p><strong>Q3</strong>：这篇文章要验证一个什么科学假设？</p>          </div><div class="note note-red no-icon">            <p><strong>Q4</strong>：有哪些相关研究？如何归类？谁是这一课题在领域内值得关注的研究员？</p>          </div><div class="note note-orange no-icon">            <p><strong>Q5</strong>：论文中提到的解决方案之关键是什么？</p>          </div><div class="note note-purple no-icon">            <p><strong>Q6</strong>：论文中的实验是如何设计的？</p>          </div><div class="note note-green no-icon">            <p><strong>Q7</strong>：用于定量评估的数据集是什么？代码有没有开源？</p>          </div><div class="note note-no-icon">            <p><strong>Q8</strong>：论文中的实验及结果有没有很好地支持需要验证的科学假设？</p>          </div><div class="note note-blue no-icon">            <p><strong>Q9</strong>：这篇论文到底有什么贡献？</p>          </div><div class="note note-pink no-icon">            <p><strong>Q10</strong>：下一步呢？有什么工作可以继续深入？</p>          </div><h2 id="3-经典案例">3. 经典案例</h2><ul><li><a href="https://www.zhihu.com/column/c_1426237027801444353">Paper 十问</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;论文十问&lt;/strong&gt;由沈向洋博士提出，他鼓励大家带着这十个问题去阅读论文，用有用的信息构建认知模型。个人也觉得论文十问对阅读论文非常有帮助，故此记下，同时记录一些经典的论文十答作为典范参考。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="Research" scheme="https://blueheart0621.github.io/categories/Research/"/>
    
    <category term="PaperReading" scheme="https://blueheart0621.github.io/categories/Research/PaperReading/"/>
    
    
    <category term="Research" scheme="https://blueheart0621.github.io/tags/Research/"/>
    
    <category term="PaperReading" scheme="https://blueheart0621.github.io/tags/PaperReading/"/>
    
  </entry>
  
  <entry>
    <title>VSCode插件Remote-SSH相关问题</title>
    <link href="https://blueheart0621.github.io/2022/07/16/Technique/VSCode/VSCode%E6%8F%92%E4%BB%B6Remote-SSH%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    <id>https://blueheart0621.github.io/2022/07/16/Technique/VSCode/VSCode%E6%8F%92%E4%BB%B6Remote-SSH%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</id>
    <published>2022-07-16T07:00:18.000Z</published>
    <updated>2022-11-18T07:07:02.093Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-Windows-下报错：Permissions-for-xxx-ssh-id-rsa-are-too-open">1. Windows 下报错：Permissions for 'xxx/.ssh/id_rsa' are too open.</h3><ul><li><strong>问题</strong>：当前用户 <code>.ssh</code> 目录下私钥权限太开放了；</li><li>解决：找到当前用户目录下 <code>.ssh/id_rsa</code> 文件，鼠标右键-&gt;属性-&gt;安全，然后编缉「组或用户名」，将除当前用户、SYSTEM 和管理员用户之外的其它用户都删除即可。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-Windows-下报错：Permissions-for-xxx-ssh-id-rsa-are-too-open&quot;&gt;1. Windows 下报错：Permissions for &#39;xxx/.ssh/id_rsa&#39; are too open.&lt;/h3&gt;
&lt;ul&gt;
</summary>
      
    
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/categories/Technique/"/>
    
    <category term="VSCode" scheme="https://blueheart0621.github.io/categories/Technique/VSCode/"/>
    
    
    <category term="Technique" scheme="https://blueheart0621.github.io/tags/Technique/"/>
    
    <category term="VSCode" scheme="https://blueheart0621.github.io/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>2016-ICML-Pixel Recurrent Neural Networks</title>
    <link href="https://blueheart0621.github.io/2022/07/03/Research/AutoRegression/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/"/>
    <id>https://blueheart0621.github.io/2022/07/03/Research/AutoRegression/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/</id>
    <published>2022-07-03T11:03:32.000Z</published>
    <updated>2022-11-18T07:07:02.113Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-摘要">1. 摘要</h2><p>这篇文章<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Van Oord, A., Kalchbrenner, N., &amp; Kavukcuoglu, K. (2016, June). Pixel recurrent neural networks. In International conference on machine learning (pp. 1747-1756). PMLR.">[1]</span></a></sup>主要提出通过自回归的方式来建模自然图像的统计分布，将整张图像的概率分布表示成一系列条件分布的乘积。对自然图像的统计分布建模是无监督学习的标志性任务，这项任务要求图像模型同时具有表现力、可处理性和可伸缩性。作者们提出了一种可以序列处理图像像素模型，该模型对原始像素值的离散概率建模。模型架构的创新包括提出了一种快速的二维循环层，和有效地在模型中使用残差连接。本文提出的模型在自然图像数据集上达到了对数似然分数的 SOTA，并超出之前的 SOTA 很多。使用本文提出的模型进行图像样本生成，可以产生清晰连贯且多种多样的图像内容。</p><h2 id="2-引言">2. 引言</h2><p>生成图像的建模是无监督学习中的核心问题。概率密度模型可以用于一系列的下游任务，诸如图像压缩、图像修复、图像去模糊等。然而，由于图像数据的高维化和高度结构化，估计自然图像的分布是极其具有挑战性的。</p><p>生成建模的一大重要阻碍是构建复杂且具有表现力的模型，同时要求其具有可处理性和可伸缩性。基于 VAE 的模型主要聚焦于随机隐变量建模，旨在能够提取出有意义的表示；但 VAE 中难以处理的推断步骤经常导致性能不佳。</p><p>一种有效的建模可处性的模型是将图像的所有像素建模为一个联合分布，然后根据条件概率的链式法则将联合分布拆成一系列条件分布的乘积。这样便将联合分布建模问题转变成一个序列问题，即每次根据前面已知的像素建模下一个未知的像素。</p><p>RNN 刚好适和这种序列问题。因此，作者在本文中提出了一种二维 RNN 并将它们用于自然图像的大规模建模中，即 PixelRNN。作者基于强大的 LSTM 层，设计了两种新的二维层：Row LSTM 和 Diagonal BiLSTM。作者同时在模型中加入了残差连接。</p><p>此外，作者还设计了一个简化版的模型，即 PixelCNN。PixelCNN 使用了掩码卷积，其只考虑局部依赖故可以做到并行处理。</p><h2 id="3-模型">3. 模型</h2><h3 id="3-1-问题建模">3.1 问题建模</h3><p>对每张 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 的图像 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">x</mi></mrow><annotation encoding="application/x-tex">\mathbf{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">x</span></span></span></span></span>，指定概率分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(\mathbf{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span></span><span class="mclose">)</span></span></span></span>，将图像像素数据展开成一维的序列数据 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>x</mi><msup><mi>n</mi><mn>2</mn></msup></msub></mrow><annotation encoding="application/x-tex">x_1, \cdots, x_{n^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.52238em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17762em;"><span></span></span></span></span></span></span></span></span></span>。根据条件概率的链式法则，可以将概率分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(\mathbf{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span></span><span class="mclose">)</span></span></span></span> 表示为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msup><mi>n</mi><mn>2</mn></msup></munderover><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>∣</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">p(\mathbf{x})=\prod_{i=1}^{n^{2}} p\left(x_{i} \mid x_{1}, \ldots, x_{i-1}\right) \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2515940000000003em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9739250000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span><span class="tag"><span class="strut" style="height:3.2515940000000003em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>由于每个像素都由 RGB 三个值组成，因此条件分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="bold">x</mi><mrow><mo>&lt;</mo><mi>i</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x_i | \mathbf{x}_{&lt;i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 可以表示为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="bold">x</mi><mrow><mo>&lt;</mo><mi>i</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>R</mi></mrow></msub><mo>∣</mo><msub><mi mathvariant="bold">x</mi><mrow><mo>&lt;</mo><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>G</mi></mrow></msub><mo>∣</mo><msub><mi mathvariant="bold">x</mi><mrow><mo>&lt;</mo><mi>i</mi></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>R</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>B</mi></mrow></msub><mo>∣</mo><msub><mi mathvariant="bold">x</mi><mrow><mo>&lt;</mo><mi>i</mi></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>R</mi></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>G</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">p(x_i | \mathbf{x}_{&lt;i}) = p\left(x_{i, R} \mid \mathbf{x}_{&lt;i}\right) p\left(x_{i, G} \mid \mathbf{x}_{&lt;i}, x_{i, R}\right) p\left(x_{i, B} \mid \mathbf{x}_{&lt;i}, x_{i, R}, x_{i, G}\right) \tag{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">G</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">G</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span><span class="tag"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><h3 id="3-2-PixelRNN">3.2 PixelRNN</h3><p>作者提出了基于 Row LSTM 和 Diagonal BiLSTM 的 PixelRNN，以及简化版的 PixelCNN。其大致结构如下：</p><img src="/images/Research/AutoRegression/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/PixelNN.png" class="" width="477" title="PixelNN"> <p>具体用数学化公式表示，以 Row LSTM 为例，其描述如下：</p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align* at position 7: \begin{̲a̲l̲i̲g̲n̲*̲}̲{\left[\mathbf…'>\begin{align*}{\left[\mathbf{o}_{i}, \mathbf{f}_{i}, \mathbf{i}_{i}, \mathbf{g}_{i}\right] } &amp;=\sigma\left(\mathbf{K}^{s s} \circledast \mathbf{h}_{i-1}+\mathbf{K}^{i s} \circledast \mathbf{x}_{i}\right) \\\mathbf{c}_{i} &amp;=\mathbf{f}_{i} \odot \mathbf{c}_{i-1}+\mathbf{i}_{i} \odot \mathbf{g}_{i} \\\mathbf{h}_{i} &amp;=\mathbf{o}_{i} \odot \tanh \left(\mathbf{c}_{i}\right) \tag{3}\end{align*}</p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">h_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">c_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> 都是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>×</mo><mi>n</mi><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">h \times n \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 维向量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊛</mo></mrow><annotation encoding="application/x-tex">\circledast</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6639600000000001em;vertical-align:-0.08198em;"></span><span class="mord amsrm">⊛</span></span></span></span> 表示卷积，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊙</mo></mrow><annotation encoding="application/x-tex">\odot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊙</span></span></span></span> 表示按元素乘积，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> 为激活函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">K</mi><mrow><mi>s</mi><mi>s</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{K}^{s s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">K</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">K</mi><mrow><mi>i</mi><mi>s</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{K}^{i s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">K</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span> 分别为 state-to-state 和 input-to-state 核权重。</p><p>对于 Diagonal BiLSTM，其沿着对角可以调整为并行处理的方法：</p><img src="/images/Research/AutoRegression/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/Diagonal%20BiLSTM.png" class="" width="482" title="Diagonal BiLSTM"> <p>此外，作者在每层 LSTM 都使用了残差连接，如下图所示：</p><img src="/images/Research/AutoRegression/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/ResidualConnection.png" class="" width="471" title="ResidualConnection"> <p>同时，作者还在每层和最终的输出之间加上了跳线连接。</p><p>PixelRNN 的模型架构如下表：</p><img src="/images/Research/AutoRegression/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/PixelRNN.png" class="" width="481" title="PixelRNN"> <h3 id="3-3-PixelCNN">3.3 PixelCNN</h3><p>由于 PixelRNN 需要序列地处理图像像素数据，且每次处理都要基于前面所有结果，无法并行，效率低下。作者便提出了简化版的 PixelCNN，其利用掩码卷积，只考虑局部的依赖关系，因此可以并行处理。掩码卷积的大致结构见下节图右。</p><h3 id="3-4-多尺度">3.4 多尺度</h3><p>作者还提出了多尺度 PixelRNN，来更好的进行图像表示：</p><img src="/images/Research/AutoRegression/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/Multi-scale.png" class="" width="591" title="Multi-scale"> <h2 id="4-实验">4. 实验</h2><p>作者分别在 MNIST 数据集和 CIFAR-10 数据集上进行了 NLL 指标的对比，如下表：</p><img src="/images/Research/AutoRegression/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/Performance-MNIST.png" class="" width="476" title="Performance-MNIST"> <img src="/images/Research/AutoRegression/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/Performance-CIFAR10.png" class="" width="484" title="Performance-CIFAR10"><h2 id="5-可视化">5. 可视化</h2><p>作者分别对在 CIFAR-10 和 ImageNet 上训练得到的模型进行样本图像生成，其可视化结果如下：</p><img src="/images/Research/AutoRegression/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/Visualization-CIFAR10.png" class="" width="1466" title="Visualization-CIFAR10"><img src="/images/Research/AutoRegression/2016-ICML-Pixel%20Recurrent%20Neural%20Networks/Visualization-ImageNet.png" class="" width="1474" title="Visualization-ImageNet"><h2 id="6-总结">6. 总结</h2><p>作者提出了 PixelRNN，以自回归的方式对自然图像进行建模。基于 LSTM，作者提出了两种二维 LSTM 用于更好地建模图像分布。同时针对自回归模型效率低下的问题，提出了只考虑局部依赖的 PixelCNN，以轻微的性能代价换取并行处理的高效率。</p><h2 id="附录">附录</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>Van Oord, A., Kalchbrenner, N., &amp; Kavukcuoglu, K. (2016, June). Pixel recurrent neural networks. In <em>International conference on machine learning</em> (pp. 1747-1756). PMLR.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-摘要&quot;&gt;1. 摘要&lt;/h2&gt;
&lt;p&gt;这篇文章&lt;sup id=&quot;fnref:1&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; </summary>
      
    
    
    
    <category term="Research" scheme="https://blueheart0621.github.io/categories/Research/"/>
    
    <category term="AutoRegression" scheme="https://blueheart0621.github.io/categories/Research/AutoRegression/"/>
    
    
    <category term="Research" scheme="https://blueheart0621.github.io/tags/Research/"/>
    
    <category term="AutoRegression" scheme="https://blueheart0621.github.io/tags/AutoRegression/"/>
    
  </entry>
  
</feed>
